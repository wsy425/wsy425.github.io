(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{509:function(t,s,a){"use strict";a.r(s);var e=a(29),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_2-1-运行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-运行脚本"}},[t._v("#")]),t._v(" 2.1 运行脚本")]),t._v(" "),a("h3",{attrs:{id:"_2-1-1-script标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-script标签"}},[t._v("#")]),t._v(" 2.1.1 script标签")]),t._v(" "),a("p",[t._v("我们几乎可以使用 "),a("code",[t._v("<script>")]),t._v(" 标签将 JavaScript 程序插入到 HTML 文档的任何位置。"),a("br"),t._v(" "),a("code",[t._v("<script>")]),t._v("标签中包裹了 JavaScript 代码，当浏览器遇到 "),a("code",[t._v("<script>")]),t._v(" 标签，代码会自动运行")]),t._v(" "),a("h3",{attrs:{id:"_2-1-2-script标签属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-script标签属性"}},[t._v("#")]),t._v(" 2.1.2 script标签属性")]),t._v(" "),a("p",[a("code",[t._v("<script>")]),t._v(" 标签有一些现在很少用到的特性（attribute），但是我们可以在老代码中找到它们")]),t._v(" "),a("h4",{attrs:{id:"type-特性-script-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-特性-script-type"}},[t._v("#")]),t._v(" type 特性："),a("code",[t._v("<script type=…>")])]),t._v(" "),a("p",[t._v('在老的 HTML4 标准中，要求 script 标签有 type 特性。通常是 type="text/javascript"。')]),t._v(" "),a("h4",{attrs:{id:"language-特性-script-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#language-特性-script-language"}},[t._v("#")]),t._v(" language 特性："),a("code",[t._v("<script language=…>")])]),t._v(" "),a("p",[t._v("这个特性是为了显示脚本使用的语言。这个特性现在已经没有任何意义，因为语言默认就是 JavaScript")]),t._v(" "),a("h4",{attrs:{id:"脚本前后的注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本前后的注释"}},[t._v("#")]),t._v(" 脚本前后的注释")]),t._v(" "),a("p",[t._v("在非常古老的书籍和指南中，你可能会在 "),a("code",[t._v("<script>")]),t._v(" 标签里面找到注释，就像这样：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--\n    ...\n//--\x3e")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("这些注释是用于不支持 "),a("code",[t._v("<script>")]),t._v(" 标签的古老的浏览器隐藏 JavaScript 代码的。由于最近 15 年内发布的浏览器都没有这样的问题")]),t._v(" "),a("h3",{attrs:{id:"_2-1-3-外部脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-外部脚本"}},[t._v("#")]),t._v(" 2.1.3 外部脚本")]),t._v(" "),a("p",[t._v("脚本文件可以通过 src 特性（attribute）添加到 HTML 文件中")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/path/to/script.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"src路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#src路径"}},[t._v("#")]),t._v(" src路径")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("/path")]),t._v("脚本文件从网站根目录开始的绝对路径")]),t._v(" "),a("li",[a("code",[t._v("./path")]),t._v("脚本文件对于当前页面的相对路径")]),t._v(" "),a("li",[a("code",[t._v("https://path")]),t._v("完整的 URL 地址")])]),t._v(" "),a("h4",{attrs:{id:"外部脚本加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部脚本加载"}},[t._v("#")]),t._v(" 外部脚本加载")]),t._v(" "),a("ol",[a("li",[t._v("浏览器会下载外部脚本，并将它保存到浏览器缓存中")]),t._v(" "),a("li",[t._v("其他页面想要相同的脚本就会从缓存中获取，而不是下载它。所以文件实际上只会下载一次")]),t._v(" "),a("li",[t._v("可以节省流量，并使得页面（加载）更快")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("如果设置了 src 特性，script 标签内容将会被忽略")])]),t._v(" "),a("h3",{attrs:{id:"_2-1-4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-总结"}},[t._v("#")]),t._v(" 2.1.4 总结")]),t._v(" "),a("ol",[a("li",[t._v("我们可以使用一个 "),a("code",[t._v("<script>")]),t._v(" 标签将 JavaScript 代码添加到页面中。")]),t._v(" "),a("li",[t._v("type 和 language 特性（attribute）不是必需的。")]),t._v(" "),a("li",[t._v("外部的脚本可以通过 "),a("code",[t._v('<script src="path/to/script.js"><\/script>')]),t._v(" 的方式插入。")])]),t._v(" "),a("h2",{attrs:{id:"_2-2-代码结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代码结构"}},[t._v("#")]),t._v(" 2.2 代码结构")]),t._v(" "),a("h3",{attrs:{id:"_2-2-1-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-语句"}},[t._v("#")]),t._v(" 2.2.1 语句")]),t._v(" "),a("p",[t._v("语句是执行行为（action）的语法结构和命令。"),a("br"),t._v("\n我们可以在代码中编写任意数量的语句。语句之间可以使用"),a("mark",[t._v("分号")]),t._v("进行分割。"),a("br"),t._v("\n通常，每条语句独占一行，以提高代码的可读性")]),t._v(" "),a("h3",{attrs:{id:"_2-2-2-分号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-分号"}},[t._v("#")]),t._v(" 2.2.2 分号")]),t._v(" "),a("p",[t._v("当存在换行符（line break）时，在大多数情况下可以省略分号")]),t._v(" "),a("h4",{attrs:{id:"自动分号插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动分号插入"}},[t._v("#")]),t._v(" 自动分号插入")]),t._v(" "),a("p",[t._v("JavaScript 将换行符理解成“隐式”的分号\n在大多数情况下，换行意味着一个分号。但是“大多数情况”并不意味着“总是”")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("存在 JavaScript 无法确定是否真的需要自动插入分号的情况")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会理解为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2-2-3-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-注释"}},[t._v("#")]),t._v(" 2.2.3 注释")]),t._v(" "),a("p",[t._v("单行注释以两个正斜杠字符 "),a("code",[t._v("//")]),t._v(" 开始\n多行注释以一个正斜杠和星号开始 "),a("code",[t._v("“/*”")]),t._v(" 并以一个星号和正斜杠结束 "),a("code",[t._v("“*/”")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("在大多数的编辑器中，一行代码可以使用 "),a("kbd",[t._v("Ctrl")]),t._v("+"),a("kbd",[t._v("/")]),t._v(" 快捷键进行单行注释，诸如 "),a("kbd",[t._v("Ctrl")]),t._v("+"),a("kbd",[t._v("Shift")]),t._v("+"),a("kbd",[t._v("/")]),t._v(" 的快捷键可以进行多行注释（选择代码，然后按下快捷键）")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("不支持注释嵌套")])]),t._v(" "),a("h2",{attrs:{id:"_2-3-现代模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-现代模式"}},[t._v("#")]),t._v(" 2.3 现代模式")]),t._v(" "),a("p",[t._v("ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。你需要一个特殊的指令 —— "),a("code",[t._v('"use strict"')]),t._v(" 来明确地激活这些特性"),a("br"),t._v(" "),a("code",[t._v('"use strict"')]),t._v(" 或者 "),a("code",[t._v("'use strict'")]),t._v("。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作"),a("br"),t._v(" "),a("code",[t._v('"use strict"')]),t._v(" 可以被放在函数体的开头。这样则可以只在该函数中启用严格模式")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("请确保 "),a("code",[t._v('"use strict"')]),t._v(" 出现在脚本的最顶部，否则严格模式可能无法启用\n没有办法取消 "),a("code",[t._v("use strict")])])]),t._v(" "),a("h2",{attrs:{id:"_2-4-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-变量"}},[t._v("#")]),t._v(" 2.4 变量")]),t._v(" "),a("p",[a("mark",[t._v("变量")]),t._v("是数据的命名存储")]),t._v(" "),a("h3",{attrs:{id:"_2-4-1-变量使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-变量使用"}},[t._v("#")]),t._v(" 2.4.1 变量使用")]),t._v(" "),a("h4",{attrs:{id:"变量声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[t._v("#")]),t._v(" 变量声明")]),t._v(" "),a("p",[a("strong",[t._v("声明")]),t._v("或者"),a("strong",[t._v("定义")]),t._v("一个名为massage的变量"),a("code",[t._v("let massage")])]),t._v(" "),a("p",[t._v("可以将变量定义和赋值合并成一行"),a("code",[t._v("let message = 'Hello!'")])]),t._v(" "),a("p",[t._v("也可以在一行中声明多个变量"),a("code",[t._v("let user = 'John', age = 25, message = 'Hello';")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("多次声明")]),t._v(" "),a("p",[t._v("声明两次会触发 error")]),t._v(" "),a("p",[t._v("一个变量应该只被声明一次。")]),t._v(" "),a("p",[t._v("对同一个变量进行重复声明会触发 error")])]),t._v(" "),a("h4",{attrs:{id:"变量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值"}},[t._v("#")]),t._v(" 变量赋值")]),t._v(" "),a("p",[t._v("对massage变量"),a("strong",[t._v("赋值")]),a("code",[t._v("message = 'Hello'")])]),t._v(" "),a("h4",{attrs:{id:"变量访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量访问"}},[t._v("#")]),t._v(" 变量访问")]),t._v(" "),a("p",[a("strong",[t._v("访问")]),t._v("massage变量"),a("code",[t._v("alert(massage)")])]),t._v(" "),a("h3",{attrs:{id:"_2-4-2-变量命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-变量命名"}},[t._v("#")]),t._v(" 2.4.2 变量命名")]),t._v(" "),a("h4",{attrs:{id:"变量命名限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量命名限制"}},[t._v("#")]),t._v(" 变量命名限制")]),t._v(" "),a("ol",[a("li",[t._v("变量名称必须仅包含字母、数字、符号 "),a("code",[t._v("$")]),t._v(" 和 "),a("code",[t._v("_")])]),t._v(" "),a("li",[t._v("首字符必须非数字")])]),t._v(" "),a("p",[t._v("如果命名包括多个单词，通常采用驼峰式命名法（camelCase）"),a("br"),t._v("\njs中变量名区分大小写")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("保留字")]),t._v(" "),a("p",[t._v("js中存在保留字无法用作变量命名")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("未采用"),a("code",[t._v("use strict")]),t._v("时可以通过直接赋值的方式使程序自动声明变量"),a("br"),t._v("\n但严格模式下则会报错")])]),t._v(" "),a("h3",{attrs:{id:"_2-4-3-常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-3-常量"}},[t._v("#")]),t._v(" 2.4.3 常量")]),t._v(" "),a("p",[t._v("声明一个常数（不变）变量，通常使用 "),a("code",[t._v("const")]),t._v(" 而非 "),a("code",[t._v("let")]),a("br"),t._v("\n使用 "),a("code",[t._v("const")]),t._v(" 声明的变量称为“常量”。它们不能被修改，如果你尝试修改就会发现报错")]),t._v(" "),a("h4",{attrs:{id:"大写形式的常数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大写形式的常数"}},[t._v("#")]),t._v(" 大写形式的常数")]),t._v(" "),a("p",[t._v("一般代码执行前就知晓且不变的数据用大写形式的常量存储，在代码执行过程中得到的不变的数据用普通常量存储")]),t._v(" "),a("h3",{attrs:{id:"_2-4-4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-4-总结"}},[t._v("#")]),t._v(" 2.4.4 总结")]),t._v(" "),a("p",[t._v("我们可以使用 var、let 或 const 声明变量来存储数据。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("let")]),t._v(" — 现代的变量声明方式。")]),t._v(" "),a("li",[a("code",[t._v("var")]),t._v(' — 老旧的变量声明方式。一般情况下，我们不会再使用它。但是，我们会在 老旧的 "var" 章节介绍 var 和 let 的微妙差别，以防你需要它们。')]),t._v(" "),a("li",[a("code",[t._v("const")]),t._v(" — 类似于 let，但是变量的值无法被修改。\n变量应当以一种容易理解变量内部是什么的方式进行命名")])]),t._v(" "),a("h2",{attrs:{id:"_2-5-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-数据类型"}},[t._v("#")]),t._v(" 2.5 数据类型")]),t._v(" "),a("h3",{attrs:{id:"_2-5-1-动态类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-动态类型"}},[t._v("#")]),t._v(" 2.5.1 动态类型")]),t._v(" "),a("p",[t._v("JavaScript 中的值都具有特定的类型"),a("br"),t._v("\n在 JavaScript 中有 8 种基本的数据类型（译注：7 种原始类型和 1 种引用类型）"),a("br"),t._v("\nJavaScript是"),a("mark",[t._v("动态类型")]),t._v("（dynamically typed）的编程语言，虽然编程语言中有不同的数据类型，但是你定义的变量并不会在定义后，被限制为某一数据类型")]),t._v(" "),a("h3",{attrs:{id:"_2-5-2-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-number"}},[t._v("#")]),t._v(" 2.5.2 Number")]),t._v(" "),a("p",[t._v("number 类型代表整数和浮点数\n数字可以有很多操作，比如，乘法 "),a("code",[t._v("*")]),t._v("、除法 "),a("code",[t._v("/")]),t._v("、加法 "),a("code",[t._v("+")]),t._v("、减法 "),a("code",[t._v("-")]),t._v(" 等等。"),a("br"),t._v("\n除了常规的数字，还包括所谓的“特殊数值（“special numeric values”）”也属于这种类型："),a("code",[t._v("Infinity")]),t._v("、"),a("code",[t._v("-Infinity")]),t._v(" 和 "),a("code",[t._v("NaN")])]),t._v(" "),a("h4",{attrs:{id:"infinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#infinity"}},[t._v("#")]),t._v(" "),a("code",[t._v("Infinity")])]),t._v(" "),a("p",[t._v("Infinity 代表数学概念中的 无穷大 ∞。是一个比任何数字都大的特殊值"),a("br"),t._v("\n我们可以通过除以 0 来得到它"),a("br"),t._v("\n或者在代码中直接使用它")]),t._v(" "),a("h4",{attrs:{id:"nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" "),a("code",[t._v("NaN")])]),t._v(" "),a("p",[t._v("NaN 代表一个计算错误。它是一个不正确的或者一个未定义的数学操作所得到的结果"),a("br"),t._v("\nNaN 是粘性的。任何对 NaN 的进一步数学运算都会返回 NaN")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("NaN数学运算的例外")]),t._v(" "),a("p",[a("code",[t._v("NaN ** 0")]),t._v(" 结果为 1")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("在 JavaScript 中做数学运算是安全的。我们可以做任何事：除以 0，将非数字字符串视为数字，等等。")]),t._v(" "),a("p",[t._v("脚本永远不会因为一个致命的错误（“死亡”）而停止。最坏的情况下，我们会得到 NaN 的结果。")])]),t._v(" "),a("h3",{attrs:{id:"_2-5-3-bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-3-bigint"}},[t._v("#")]),t._v(" 2.5.3 BigInt")]),t._v(" "),a("p",[t._v('"number" 类型无法表示大于 '),a("code",[t._v("(2"),a("sup",[t._v("53")]),t._v("-1)")]),t._v("（即 "),a("code",[t._v("9007199254740991")]),t._v("），或小于 "),a("code",[t._v("-(2"),a("sup",[t._v("53")]),t._v("-1)")]),t._v(" 的整数"),a("br"),t._v(" "),a("code",[t._v("BigInt")]),t._v(" 类型是最近被添加到 JavaScript 语言中的，用于表示任意长度的整数。")]),t._v(" "),a("p",[t._v("可以通过将 "),a("code",[t._v("n")]),t._v(" 附加到整数字段的末尾来创建 "),a("code",[t._v("BigInt")]),t._v(" 值")]),t._v(" "),a("h3",{attrs:{id:"_2-5-4-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-4-string"}},[t._v("#")]),t._v(" 2.5.4 String")]),t._v(" "),a("p",[t._v("在 JavaScript 中，有三种包含字符串的方式。")]),t._v(" "),a("ol",[a("li",[t._v("双引号："),a("code",[t._v('"Hello"')]),t._v(".")]),t._v(" "),a("li",[t._v("单引号："),a("code",[t._v("'Hello'")]),t._v(".")]),t._v(" "),a("li",[t._v("反引号："),a("code",[t._v("`Hello`")]),t._v(".")])]),t._v(" "),a("p",[t._v("双引号和单引号都是“简单”引用，在 JavaScript 中两者几乎没有什么差别")]),t._v(" "),a("h4",{attrs:{id:"反引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反引号"}},[t._v("#")]),t._v(" 反引号")]),t._v(" "),a("p",[t._v("反引号是 "),a("strong",[t._v("功能扩展")]),t._v(" 引号。它们允许我们通过将变量和表达式包装在 "),a("code",[t._v("${…}")]),t._v(" 中，来将它们嵌入到字符串中")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 嵌入一个变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello, *!*")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("*/!*!")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello, John!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 嵌入一个表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("the result is *!*")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("*/!*")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the result is 3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("code",[t._v("${…}")]),t._v(" 内的表达式会被计算，计算结果会成为字符串的一部分。可以在 "),a("code",[t._v("${…}")]),t._v(" 内放置任何东西：诸如名为 "),a("code",[t._v("name")]),t._v(" 的变量，或者诸如 "),a("code",[t._v("1 + 2")]),t._v(" 的算数表达式，或者其他一些更复杂的")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("需要注意的是，这仅仅在反引号内有效，其他引号不允许这种嵌入")])]),t._v(" "),a("h3",{attrs:{id:"_2-5-5-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-5-boolean"}},[t._v("#")]),t._v(" 2.5.5 Boolean")]),t._v(" "),a("p",[t._v("boolean 类型仅包含两个值："),a("code",[t._v("true")]),t._v(" 和 "),a("code",[t._v("false")]),a("br"),t._v("\n布尔值也可作为比较的结果")]),t._v(" "),a("h3",{attrs:{id:"_2-5-6-null值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-6-null值"}},[t._v("#")]),t._v(" 2.5.6 null值")]),t._v(" "),a("p",[t._v("特殊的 "),a("code",[t._v("null")]),t._v(" 值不属于上述任何一种类型。"),a("br"),t._v("\n它构成了一个独立的类型，只包含 "),a("code",[t._v("null")]),t._v(" 值"),a("br"),t._v("\n相比较于其他编程语言，JavaScript 中的 "),a("code",[t._v("null")]),t._v(" 不是一个“对不存在的 "),a("code",[t._v("object")]),t._v(" 的引用”或者 “null 指针”。"),a("br"),t._v("\nJavaScript 中的 "),a("code",[t._v("null")]),t._v(" 仅仅是一个代表“无”、“空”或“值未知”的特殊值")]),t._v(" "),a("h3",{attrs:{id:"_2-5-7-undefined值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-7-undefined值"}},[t._v("#")]),t._v(" 2.5.7 undefined值")]),t._v(" "),a("p",[t._v("特殊值 "),a("code",[t._v("undefined")]),t._v(" 和 "),a("code",[t._v("null")]),t._v(" 一样自成类型")]),t._v(" "),a("p",[a("code",[t._v("undefined")]),t._v(" 的含义是 "),a("code",[t._v("未被赋值")])]),t._v(" "),a("p",[t._v("如果一个变量已被声明，但未被赋值，那么它的值就是 "),a("code",[t._v("undefined")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("从技术上讲，可以显式地将 "),a("code",[t._v("undefined")]),t._v(" 赋值给变量\n但是不建议这样做。通常，使用 "),a("code",[t._v("null")]),t._v(" 将一个“空”或者“未知”的值写入变量中，而 "),a("code",[t._v("undefined")]),t._v(" 则保留作为未进行初始化的事物的默认初始值")])]),t._v(" "),a("h3",{attrs:{id:"_2-5-8-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-8-object"}},[t._v("#")]),t._v(" 2.5.8 Object")]),t._v(" "),a("p",[a("code",[t._v("object")]),t._v(" 类型是一个特殊的类型，其他所有的数据类型都被称为“原始类型”，因为它们的值只包含一个单独的内容（字符串、数字或者其他）。相反，"),a("code",[t._v("object")]),t._v(" 则用于储存数据集合和更复杂的实体")]),t._v(" "),a("h3",{attrs:{id:"_2-5-9-symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-9-symbol"}},[t._v("#")]),t._v(" 2.5.9 Symbol")]),t._v(" "),a("p",[a("code",[t._v("symbol")]),t._v(" 类型用于创建对象的唯一标识符")]),t._v(" "),a("h3",{attrs:{id:"_2-5-10-typeof-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-10-typeof-运算符"}},[t._v("#")]),t._v(" 2.5.10 typeof 运算符")]),t._v(" "),a("p",[a("code",[t._v("typeof")]),t._v(" 运算符返回参数的类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "bigint"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "boolean"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "symbol"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Math "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"  (1)')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"  (2)')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" alert "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function"  (3)')]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("typeof null")]),t._v(" "),a("p",[a("code",[t._v("typeof null")]),t._v(" 的结果为 "),a("code",[t._v('"object"')]),t._v("。这是官方承认的 "),a("code",[t._v("typeof")]),t._v(" 的错误，这个问题来自于 JavaScript 语言的早期阶段，并为了兼容性而保留了下来。"),a("code",[t._v("null")]),t._v(" 绝对不是一个 "),a("code",[t._v("object")]),t._v("。"),a("code",[t._v("null")]),t._v(" 有自己的类型，它是一个特殊值。"),a("code",[t._v("typeof")]),t._v(" 的行为在这里是错误的。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("function")]),t._v(" "),a("p",[a("code",[t._v("typeof alert")]),t._v(" 的结果是 "),a("code",[t._v('"function"')]),t._v("，因为 "),a("code",[t._v("alert")]),t._v(' 在 JavaScript 语言中是一个函数。我们会在下一章学习函数，那时我们会了解到，在 JavaScript 语言中没有一个特别的 "function" 类型。函数隶属于 '),a("code",[t._v("object")]),t._v(" 类型。但是 "),a("code",[t._v("typeof")]),t._v(" 会对函数区分对待，并返回 "),a("code",[t._v('"function"')]),t._v("。这也是来自于 JavaScript 语言早期的问题。从技术上讲，这种行为是不正确的，但在实际编程中却非常方便")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("`typeof(x)` 语法")]),t._v(" "),a("p",[t._v("你可能还会遇到另一种语法："),a("code",[t._v("typeof(x)")]),t._v("。它与 "),a("code",[t._v("typeof x")]),t._v(" 相同。"),a("br"),t._v("\n简单点说："),a("code",[t._v("typeof")]),t._v(" 是一个操作符，不是一个函数。这里的括号不是 "),a("code",[t._v("typeof")]),t._v(" 的一部分。它是数学运算分组的括号。"),a("br"),t._v("\n通常，这样的括号里包含的是一个数学表达式，例如 "),a("code",[t._v("(2 + 2)")]),t._v("，但这里它只包含一个参数 "),a("code",[t._v("(x)")]),t._v("。从语法上讲，它们允许在 "),a("code",[t._v("typeof")]),t._v(" 运算符和其参数之间不打空格，有些人喜欢这样的风格。"),a("br"),t._v("\n有些人更喜欢用 "),a("code",[t._v("typeof(x)")]),t._v("，尽管 "),a("code",[t._v("typeof x")]),t._v(" 语法更为常见")])]),t._v(" "),a("h3",{attrs:{id:"_2-5-11-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-11-总结"}},[t._v("#")]),t._v(" 2.5.11 总结")]),t._v(" "),a("p",[t._v("JavaScript 中有八种基本的数据类型（译注：前七种为基本数据类型，也称为原始类型，而 "),a("code",[t._v("object")]),t._v(" 为复杂数据类型）。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("number")]),t._v(" 用于任何类型的数字：整数或浮点数，在 "),a("code",[t._v("±(2"),a("sup",[t._v("53")]),t._v("-1)")]),t._v(" 范围内的整数。")]),t._v(" "),a("li",[a("code",[t._v("bigint")]),t._v(" 用于任意长度的整数。")]),t._v(" "),a("li",[a("code",[t._v("string")]),t._v(" 用于字符串：一个字符串可以包含 0 个或多个字符，所以没有单独的单字符类型。")]),t._v(" "),a("li",[a("code",[t._v("boolean")]),t._v(" 用于 "),a("code",[t._v("true")]),t._v(" 和 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("null")]),t._v(" 用于未知的值 —— 只有一个 "),a("code",[t._v("null")]),t._v(" 值的独立类型。")]),t._v(" "),a("li",[a("code",[t._v("undefined")]),t._v(" 用于未定义的值 —— 只有一个 "),a("code",[t._v("undefined")]),t._v(" 值的独立类型。")]),t._v(" "),a("li",[a("code",[t._v("symbol")]),t._v(" 用于唯一的标识符。")]),t._v(" "),a("li",[a("code",[t._v("object")]),t._v(" 用于更复杂的数据结构。")])]),t._v(" "),a("p",[t._v("我们可以通过 "),a("code",[t._v("typeof")]),t._v(" 运算符查看存储在变量中的数据类型。")]),t._v(" "),a("ul",[a("li",[t._v("通常用作 "),a("code",[t._v("typeof x")]),t._v("，但 "),a("code",[t._v("typeof(x)")]),t._v(" 也可行。")]),t._v(" "),a("li",[t._v("以字符串的形式返回类型名称，例如 "),a("code",[t._v('"string"')]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("typeof null")]),t._v(" 会返回 "),a("code",[t._v('"object"')]),t._v(" —— 这是 JavaScript 编程语言的一个错误，实际上它并不是一个 "),a("code",[t._v("object")])])]),t._v(" "),a("h2",{attrs:{id:"_2-6-交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-交互"}},[t._v("#")]),t._v(" 2.6 交互")]),t._v(" "),a("h3",{attrs:{id:"_2-6-1-alert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-1-alert"}},[t._v("#")]),t._v(" 2.6.1 alert")]),t._v(" "),a("p",[t._v("浏览器中显示一条信息，并等待用户按下”OK”"),a("br"),t._v("\n弹出的这个带有信息的小窗口被称为 "),a("strong",[t._v("模态窗")]),t._v('。"modal" 意味着用户不能与页面的其他部分（例如点击其他按钮等）进行交互，直到他们处理完窗口。在上面示例这种情况下 —— 直到用户点击“确定”按钮。')]),t._v(" "),a("h3",{attrs:{id:"_2-6-2-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-2-prompt"}},[t._v("#")]),t._v(" 2.6.2 prompt")]),t._v(" "),a("p",[a("code",[t._v("prompt")]),t._v(" 函数接收两个参数：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("浏览器会显示一个带有文本消息的模态窗口，还有 input 框和确定/取消按钮。"),a("br"),t._v("\n访问者可以在提示输入栏中输入一些内容，然后按“确定”键。然后我们在 "),a("code",[t._v("result")]),t._v(" 中获取该文本。或者他们可以按取消键或按 "),a("code",[t._v("key:Esc")]),t._v(" 键取消输入，然后我们得到 "),a("code",[t._v("null")]),t._v(" 作为 "),a("code",[t._v("result")]),t._v("。"),a("br"),t._v(" "),a("code",[t._v("prompt")]),t._v(" 将返回用户在 "),a("code",[t._v("input")]),t._v(" 框内输入的文本，如果用户取消了输入，则返回 "),a("code",[t._v("null")])]),t._v(" "),a("h4",{attrs:{id:"title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#title"}},[t._v("#")]),t._v(" title")]),t._v(" "),a("p",[t._v("显示给用户的文本")]),t._v(" "),a("h4",{attrs:{id:"default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default"}},[t._v("#")]),t._v(" default")]),t._v(" "),a("p",[t._v("可选的第二个参数，指定 input 框的初始值")]),t._v(" "),a("h3",{attrs:{id:"_2-6-2-confirm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-2-confirm"}},[t._v("#")]),t._v(" 2.6.2 confirm")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("confirm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("confirm")]),t._v(" 函数显示一个带有 "),a("code",[t._v("question")]),t._v(" 以及确定和取消两个按钮的模态窗口。")]),t._v(" "),a("p",[t._v("点击确定返回 "),a("code",[t._v("true")]),t._v("，点击取消返回 "),a("code",[t._v("false")])]),t._v(" "),a("h3",{attrs:{id:"_2-6-3-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-3-总结"}},[t._v("#")]),t._v(" 2.6.3 总结")]),t._v(" "),a("p",[t._v("我们学习了与用户交互的 3 个浏览器的特定函数：")]),t._v(" "),a("p",[a("code",[t._v("alert")]),t._v("\n: 显示信息。")]),t._v(" "),a("p",[a("code",[t._v("prompt")]),t._v("\n: 显示信息要求用户输入文本。点击确定返回文本，点击取消或按下 "),a("code",[t._v("key:Esc")]),t._v(" 键返回 "),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("confirm")]),t._v("\n: 显示信息等待用户点击确定或取消。点击确定返回 "),a("code",[t._v("true")]),t._v("，点击取消或按下 "),a("code",[t._v("key:Esc")]),t._v(" 键返回 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("p",[t._v("这些方法都是模态的：它们暂停脚本的执行，并且不允许用户与该页面的其余部分进行交互，直到窗口被解除。")]),t._v(" "),a("p",[t._v("上述所有方法共有两个限制：")]),t._v(" "),a("ol",[a("li",[t._v("模态窗口的确切位置由浏览器决定。通常在页面中心。")]),t._v(" "),a("li",[t._v("窗口的确切外观也取决于浏览器。我们不能修改它。")])])])}),[],!1,null,null,null);s.default=v.exports}}]);