(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{487:function(t,a,_){"use strict";_.r(a);var s=_(29),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-git原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-git原理"}},[t._v("#")]),t._v(" 1 git原理")]),t._v(" "),_("h3",{attrs:{id:"_1-1-snapshot"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-snapshot"}},[t._v("#")]),t._v(" 1.1 snapshot")]),t._v(" "),_("p",[t._v("直接将发生变更的文件记录一个快照")]),t._v(" "),_("h3",{attrs:{id:"_1-2-可撤销s"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-可撤销s"}},[t._v("#")]),t._v(" 1.2 可撤销s")]),t._v(" "),_("p",[t._v("几乎所有提交快照的操作都是可撤销的")]),t._v(" "),_("h3",{attrs:{id:"_1-3-本地操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-本地操作"}},[t._v("#")]),t._v(" 1.3 本地操作")]),t._v(" "),_("p",[t._v("大多数的操作可以本地进行")]),t._v(" "),_("h2",{attrs:{id:"_2-git-clone和git-push"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-clone和git-push"}},[t._v("#")]),t._v(" 2 git clone和git push")]),t._v(" "),_("h3",{attrs:{id:"_2-1-git-clone"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-git-clone"}},[t._v("#")]),t._v(" 2.1 git clone")]),t._v(" "),_("p",[t._v("git clone + SSH协议（+你想定义的下载文件夹名字）")]),t._v(" "),_("h3",{attrs:{id:"_2-2-git-push"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-git-push"}},[t._v("#")]),t._v(" 2.2 git push")]),t._v(" "),_("p",[t._v("在push之前一定要先git pull使本地文件夹与远程仓库同步")]),t._v(" "),_("h2",{attrs:{id:"_3-git文件四大状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-git文件四大状态"}},[t._v("#")]),t._v(" 3 Git文件四大状态")]),t._v(" "),_("h3",{attrs:{id:"_3-1-untrack-未记录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-untrack-未记录"}},[t._v("#")]),t._v(" 3.1 untrack 未记录")]),t._v(" "),_("ol",[_("li",[t._v("新创建的没有记录名称的文件")]),t._v(" "),_("li",[t._v("用 "),_("code",[t._v("git add")]),t._v("来记录，使文件变为staged状态")])]),t._v(" "),_("h3",{attrs:{id:"_3-2-modified-修改过"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-modified-修改过"}},[t._v("#")]),t._v(" 3.2 modified 修改过")]),t._v(" "),_("ol",[_("li",[t._v("已经记录单最近发生了修改的文件")]),t._v(" "),_("li",[t._v("用"),_("code",[t._v("git add")]),t._v("来记录，使文件变为staged状态")]),t._v(" "),_("li",[t._v("用"),_("code",[t._v("git restore")]),t._v("来取消文件登记信息，使文件变为untrack状态")])]),t._v(" "),_("h3",{attrs:{id:"_3-3-staged-暂存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-staged-暂存"}},[t._v("#")]),t._v(" 3.3 staged 暂存")]),t._v(" "),_("ol",[_("li",[t._v("文件在git系统中记录的是最新状态")]),t._v(" "),_("li",[t._v("用"),_("code",[t._v("git commit")]),t._v("来提交，是文件变为committed状态")])]),t._v(" "),_("h3",{attrs:{id:"_3-4-committed-已提交"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-committed-已提交"}},[t._v("#")]),t._v(" 3.4 committed 已提交")]),t._v(" "),_("ol",[_("li",[t._v("文件提交到本地git仓库中")]),t._v(" "),_("li",[t._v("用"),_("code",[t._v("git push")]),t._v("将文件推送至远程仓库中")])]),t._v(" "),_("h3",{attrs:{id:"_3-5-总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-总结"}},[t._v("#")]),t._v(" 3.5 总结")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("git status")]),t._v("查看文件状态")]),t._v(" "),_("li",[_("img",{attrs:{src:"https://images2017.cnblogs.com/blog/63651/201709/63651-20170909091456335-1787774607.jpg",alt:"状态关系图"}})])]),t._v(" "),_("h2",{attrs:{id:"_4-gitignore"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-gitignore"}},[t._v("#")]),t._v(" 4 gitignore")]),t._v(" "),_("h3",{attrs:{id:"_4-1-作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-作用"}},[t._v("#")]),t._v(" 4.1 作用")]),t._v(" "),_("p",[t._v("使用"),_("code",[t._v("git add .")]),t._v("的时候避开一些不上传的文件")]),t._v(" "),_("h3",{attrs:{id:"_4-2-使用方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-使用方法"}},[t._v("#")]),t._v(" 4.2 使用方法")]),t._v(" "),_("ol",[_("li",[t._v("在git目录下创建一个.gitignore文件")]),t._v(" "),_("li",[t._v("参考"),_("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitignore文件模板"),_("OutboundLink")],1),t._v("，修改成为自己的文件")])]),t._v(" "),_("h3",{attrs:{id:"_4-3-gitignore文件语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-gitignore文件语法"}},[t._v("#")]),t._v(" 4.3 gitignore文件语法")]),t._v(" "),_("h4",{attrs:{id:"_4-3-1-表示注释"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-表示注释"}},[t._v("#")]),t._v(" 4.3.1 #表示注释")]),t._v(" "),_("h4",{attrs:{id:"_4-3-2-忽略整个文件夹"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-忽略整个文件夹"}},[t._v("#")]),t._v(" 4.3.2 /忽略整个文件夹")]),t._v(" "),_("p",[_("code",[t._v("scr/build/")]),t._v("忽略了整个scr/build的内容")]),t._v(" "),_("h4",{attrs:{id:"_4-3-3-表示取反"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-表示取反"}},[t._v("#")]),t._v(" 4.3.3 ！表示取反")]),t._v(" "),_("p",[_("code",[t._v("！main.go")]),t._v("保留main.go文件，与上一条搭配使用")]),t._v(" "),_("h4",{attrs:{id:"_4-3-4-glob模式匹配"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-glob模式匹配"}},[t._v("#")]),t._v(" 4.3.4 glob模式匹配")]),t._v(" "),_("ol",[_("li",[t._v("*表示一切字符串，"),_("code",[t._v("*.txt")]),t._v("表示过滤一切txt文件")]),t._v(" "),_("li",[t._v("[] 表示方括号中任何一个字符，"),_("code",[t._v("[0-9]")]),t._v("表示匹配0-9中任意一个数字")]),t._v(" "),_("li",[t._v("？表示匹配任何一个字符")])]),t._v(" "),_("h2",{attrs:{id:"_5-git-diff"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-diff"}},[t._v("#")]),t._v(" 5 git diff")]),t._v(" "),_("p",[t._v("查看当前工作区与暂存区的差别")]),t._v(" "),_("h3",{attrs:{id:"_5-1-git-diff-文件路径"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-git-diff-文件路径"}},[t._v("#")]),t._v(" 5.1 git diff + 文件路径")]),t._v(" "),_("p",[t._v("加上文件名，查看一下某一个文件具体的改动")]),t._v(" "),_("h3",{attrs:{id:"_5-2-git-diff-cached"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-git-diff-cached"}},[t._v("#")]),t._v(" 5.2 git diff --cached")]),t._v(" "),_("p",[t._v("查看暂存区和本地git仓库的差别")]),t._v(" "),_("h3",{attrs:{id:"_5-3-其他不常用用法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-其他不常用用法"}},[t._v("#")]),t._v(" 5.3 其他不常用用法")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("git diff <commitid>")]),t._v("\n比较工作区和某一个提交的差别")]),t._v(" "),_("li",[_("code",[t._v("git diff <commitid> <filepath>")]),t._v("\n比较工作区和某一个提交某一个文件的差别")]),t._v(" "),_("li",[_("code",[t._v("git diff --cached <commitid>")]),t._v("\n比较暂存区和某一个提交的差别")]),t._v(" "),_("li",[_("code",[t._v("git diff --cached <commitid> <filepath>")]),t._v("\n比较暂存区和某一个提交某一个文件的差别")])]),t._v(" "),_("h2",{attrs:{id:"_6-git-log"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-git-log"}},[t._v("#")]),t._v(" 6 git log")]),t._v(" "),_("p",[t._v("查看之前的提交记录")]),t._v(" "),_("ol",[_("li",[t._v("commit id\ngit log后commit后面跟着的一长串\ngit对commit id有自动补全功能，赋值前几位就可以了")]),t._v(" "),_("li",[t._v("提交信息\n每次commit -m之后后面输入的字符串，是比较关键的提示信息")])]),t._v(" "),_("h3",{attrs:{id:"_6-1-git-log-p"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-git-log-p"}},[t._v("#")]),t._v(" 6.1 git log -p")]),t._v(" "),_("p",[t._v("展示出每一个commit中的改动，相当于同时做git diff\ngit log -p -n：查最近几条的提交记录及commit改动")]),t._v(" "),_("h3",{attrs:{id:"_6-2-git-log-start"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-git-log-start"}},[t._v("#")]),t._v(" 6.2 git log --start")]),t._v(" "),_("p",[t._v("在查看提交记录的基础上查看每次commit有多少改动量")]),t._v(" "),_("h3",{attrs:{id:"_6-3-git-log-pretty"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-git-log-pretty"}},[t._v("#")]),t._v(" 6.3 git log --pretty")]),t._v(" "),_("p",[t._v("pretty支持让我们自己DIY想看到的log展示\n官方提供了oneline、short、full、fuller几种模板\n可以自己定义，例如定义log日志当中应该包含commitid，提交时间，作者以及comment。那么定义出一种格式：%h - %ad - %an - %s命令行则为\n"),_("code",[t._v('git log --pretty=format:"%h - %ad - %an - %s"')]),t._v("\n官方提供了pretty参数表格")]),t._v(" "),_("h2",{attrs:{id:"_7-git恢复相关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-git恢复相关"}},[t._v("#")]),t._v(" 7 git恢复相关")]),t._v(" "),_("h3",{attrs:{id:"_7-1-git中删除文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-git中删除文件"}},[t._v("#")]),t._v(" 7.1 git中删除文件")]),t._v(" "),_("p",[_("code",[t._v("git rm")]),t._v("\n将文件从git以及文件系统当中一起移除（本地仓库、暂存、本地都删）\n提交后从下一个提交开始这个文件就不会被存储一份了\n留下添加文件和删除文件两条记录")]),t._v(" "),_("h3",{attrs:{id:"_7-2-git中删除记录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-git中删除记录"}},[t._v("#")]),t._v(" 7.2 git中删除记录")]),t._v(" "),_("p",[_("code",[t._v("git commit --amend")]),t._v("\n在删除文件后使用该指令在当前commit上修补而不是提交新的commit，这样就不会留下记录了")]),t._v(" "),_("ul",[_("li",[t._v("如果记录已经push到远程，使用该指令会导致和远程记录不吻合，需要使用"),_("code",[t._v("git push -f")]),t._v("强行push，但这会覆盖远程commit，可能会导致其他人代码紊乱")])]),t._v(" "),_("h3",{attrs:{id:"_7-3-删除暂存区文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-删除暂存区文件"}},[t._v("#")]),t._v(" 7.3 删除暂存区文件")]),t._v(" "),_("p",[_("code",[t._v("git rm --cached")]),t._v("\n尚未commit的文件仅删除暂存区，保留本地文件")]),t._v(" "),_("h3",{attrs:{id:"_7-4-回滚commit版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-回滚commit版本"}},[t._v("#")]),t._v(" 7.4 回滚commit版本")]),t._v(" "),_("p",[_("code",[t._v("git reset --soft HEAD^")]),t._v("\n所有文件状态返回某一个commit的版本")]),t._v(" "),_("h3",{attrs:{id:"_7-5-回滚文件版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-回滚文件版本"}},[t._v("#")]),t._v(" 7.5 回滚文件版本")]),t._v(" "),_("p",[_("code",[t._v("git checkout -- filename")]),t._v("\n将文件恢复到之前提交的状态（本地和暂存都是）")]),t._v(" "),_("h2",{attrs:{id:"_8-git分支-branch"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-git分支-branch"}},[t._v("#")]),t._v(" 8 git分支(branch)")]),t._v(" "),_("h3",{attrs:{id:"_8-1-git结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-git结构"}},[t._v("#")]),t._v(" 8.1 git结构")]),t._v(" "),_("p",[t._v("在git当中我们使用的分支其实是一个一个在commit当中切换的指针\n例子：\n"),_("img",{attrs:{src:"https://i.loli.net/2020/09/24/djGq2kYrOavHoCm.png",alt:"QQ图片20200924103419.png"}})]),t._v(" "),_("h3",{attrs:{id:"_8-2-创建分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-创建分支"}},[t._v("#")]),t._v(" 8.2 创建分支")]),t._v(" "),_("p",[_("code",[t._v("git branch XXX")]),t._v(" "),_("code",[t._v("git checkout -b XXX")])]),t._v(" "),_("h3",{attrs:{id:"_8-3-head指针"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-head指针"}},[t._v("#")]),t._v(" 8.3 HEAD指针")]),t._v(" "),_("p",[t._v("指向当前代码仓库的位置\n可以移动到任意结点上\n移动HEAD指针\n"),_("code",[t._v("git checkout (commit id/分支名)")])]),t._v(" "),_("h3",{attrs:{id:"_8-4-分支合并"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-分支合并"}},[t._v("#")]),t._v(" 8.4 分支合并")]),t._v(" "),_("p",[_("code",[t._v("git checkout master")]),t._v(" "),_("code",[t._v("git merge test")]),t._v("\n将test合并到master上")]),t._v(" "),_("h4",{attrs:{id:"_8-4-1-快速合并-fast-forward"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-1-快速合并-fast-forward"}},[t._v("#")]),t._v(" 8.4.1 快速合并(fast-forward)")]),t._v(" "),_("p",[t._v("test分支是从master分支当中切出去的，后来master分支就再也没有进行过改动\n合并的时候，其实只需要移动master指针到test分支上即可")]),t._v(" "),_("h4",{attrs:{id:"_8-4-2-创建新commit"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-2-创建新commit"}},[t._v("#")]),t._v(" 8.4.2 创建新commit")]),t._v(" "),_("p",[t._v("test分支是从master分支当中切出去后来master分支有改动\n由于不是直接上下游关系了，所以git创建了一个新的commit用来合并两个分支的代码\n合并之后应该删除没用的分支\n"),_("code",[t._v("git branch -d test")])]),t._v(" "),_("h3",{attrs:{id:"_8-5-合并分支冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-合并分支冲突"}},[t._v("#")]),t._v(" 8.5 合并分支冲突")]),t._v(" "),_("h4",{attrs:{id:"_8-5-1-查看冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-1-查看冲突"}},[t._v("#")]),t._v(" 8.5.1 查看冲突")]),t._v(" "),_("p",[_("code",[t._v("git diff")])]),t._v(" "),_("h4",{attrs:{id:"_8-5-2-手动解决"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-2-手动解决"}},[t._v("#")]),t._v(" 8.5.2 手动解决")]),t._v(" "),_("p",[t._v("把提示行去掉\n留下想要的代码，重新add、commit")]),t._v(" "),_("h4",{attrs:{id:"_8-5-3-放弃合并"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-3-放弃合并"}},[t._v("#")]),t._v(" 8.5.3 放弃合并")]),t._v(" "),_("p",[_("code",[t._v("git merge --abort")])]),t._v(" "),_("h4",{attrs:{id:"_8-5-4-git合并工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-4-git合并工具"}},[t._v("#")]),t._v(" 8.5.4 git合并工具")]),t._v(" "),_("p",[t._v("git merge tool\n不好用，一般不用")]),t._v(" "),_("h4",{attrs:{id:"_8-5-5-ide工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-5-ide工具"}},[t._v("#")]),t._v(" 8.5.5 IDE工具")]),t._v(" "),_("h2",{attrs:{id:"_9-远程分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-远程分支"}},[t._v("#")]),t._v(" 9 远程分支")]),t._v(" "),_("h3",{attrs:{id:"_9-1-origin指针"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-origin指针"}},[t._v("#")]),t._v(" 9.1 origin指针")]),t._v(" "),_("p",[t._v("和master指针性质一样，代表远程远程仓库")]),t._v(" "),_("h3",{attrs:{id:"_9-2-操作命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-操作命令"}},[t._v("#")]),t._v(" 9.2 操作命令")]),t._v(" "),_("h4",{attrs:{id:"_9-2-1-代码拉取"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-1-代码拉取"}},[t._v("#")]),t._v(" 9.2.1 代码拉取")]),t._v(" "),_("p",[_("code",[t._v("git fetch")]),t._v(":将远程改动同步到本地（针对远程的所有改动），如果有多个远程的话要指定远程名称\n"),_("code",[t._v("git pull")]),t._v("只针对当前分支对应的远程分支，而且多了一步merge合并操作")]),t._v(" "),_("h4",{attrs:{id:"_9-2-2-代码推送"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-2-代码推送"}},[t._v("#")]),t._v(" 9.2.2 代码推送")]),t._v(" "),_("p",[t._v("本地的分支是不会自动和远程同步的\n"),_("code",[t._v("git push origin test")]),t._v(" "),_("code",[t._v("git branch --set-upstream-to master origin/master")]),t._v("：将本地分支和远程建立映射\n映射之后就可以直接使用"),_("code",[t._v("git push")])]),t._v(" "),_("h2",{attrs:{id:"_10-git-rebase"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-git-rebase"}},[t._v("#")]),t._v(" 10 git rebase")]),t._v(" "),_("h3",{attrs:{id:"_10-1-rebase简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-rebase简介"}},[t._v("#")]),t._v(" 10.1 rebase简介")]),t._v(" "),_("p",[t._v("提取我们在A分支上的改动，然后应用在B分支的代码上")]),t._v(" "),_("div",{staticClass:"language-git line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-git"}},[_("code",[t._v("git checkout bugFix\ngit rebase master\ngit checkout master\ngit merge bugFix\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br")])]),_("p",[_("img",{attrs:{src:"https://i.loli.net/2020/10/09/cI5BlCJLYvP2qEk.jpg",alt:"微信图片_20201009152241.jpg"}}),_("img",{attrs:{src:"https://i.loli.net/2020/10/09/x12JH6UfGSPVFoy.jpg",alt:"微信图片_20201009152228.jpg"}})]),t._v(" "),_("h4",{attrs:{id:"_10-1-1-onto参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-1-onto参数"}},[t._v("#")]),t._v(" 10.1.1 onto参数")]),t._v(" "),_("p",[t._v("确定rebase的范围\n"),_("code",[t._v("git rebase --onto master feature bugFix")]),t._v("\ngit执行这条命令的时候会先找到feature和bugFix的共同祖先，然后将共同祖先之后的部分rebase到master")]),t._v(" "),_("h3",{attrs:{id:"_10-2-实践网站"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-实践网站"}},[t._v("#")]),t._v(" 10.2 实践网站")]),t._v(" "),_("p",[_("a",{attrs:{href:"learngitbranching.js.org"}},[t._v("图形化演示网站")])]),t._v(" "),_("h3",{attrs:{id:"_10-3-使用禁忌"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-使用禁忌"}},[t._v("#")]),t._v(" 10.3 使用禁忌")]),t._v(" "),_("p",[t._v("如果还有其他分支依赖了当前分支，我们这时候不可以使用rebase")]),t._v(" "),_("h2",{attrs:{id:"_11-git-show"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-git-show"}},[t._v("#")]),t._v(" 11 git show")]),t._v(" "),_("p",[t._v("查看代码层面的改动")]),t._v(" "),_("h3",{attrs:{id:"_11-1-查看某个commit下的改动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-查看某个commit下的改动"}},[t._v("#")]),t._v(" 11.1 查看某个commit下的改动")]),t._v(" "),_("p",[_("code",[t._v("git show commit_id")]),t._v("\ncommit id的查找\n"),_("code",[t._v("git log --stat")]),t._v("列举每个commit具体到文件级别的改动\n"),_("code",[t._v("git log --pretty=online")]),t._v("将git提交记录压缩成一行")]),t._v(" "),_("h3",{attrs:{id:"_11-2-查看分支下的改动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-查看分支下的改动"}},[t._v("#")]),t._v(" 11.2 查看分支下的改动")]),t._v(" "),_("p",[_("code",[t._v("git show test")]),t._v("查看test分支下最后一个提交节点的改动\n"),_("code",[t._v("git show test^")]),t._v("查看test分支下最后一个节点的父节点改动\n"),_("code",[t._v("git show test~3")]),t._v("查看test分支下最后一个节点的前第三个父节点")]),t._v(" "),_("h2",{attrs:{id:"_12-git-reflog"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-git-reflog"}},[t._v("#")]),t._v(" 12 git reflog")]),t._v(" "),_("p",[_("code",[t._v("reflog = reference log")]),t._v("\n查看引用日志\n第一列表示commit id；第二列表示分支；第三列表示相对位置，相对于现在HEAD指针的位置；最后一列记录HEAD指针移动情况\n可以通过这个方式查找git log无法查找在现在HEAD指针之后提交过的commit id，然后checkout指针恢复")]),t._v(" "),_("h2",{attrs:{id:"_13-区间选择"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-区间选择"}},[t._v("#")]),t._v(" 13 区间选择")]),t._v(" "),_("h3",{attrs:{id:"_13-1-双点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-双点"}},[t._v("#")]),t._v(" 13.1 双点")]),t._v(" "),_("p",[_("code",[t._v("git log master..experiment")]),t._v("\n筛选出在experiment当中但是不在master当中的提交")]),t._v(" "),_("h4",{attrs:{id:"_13-1-1-常用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-1-常用"}},[t._v("#")]),t._v(" 13.1.1 常用")]),t._v(" "),_("p",[_("code",[t._v("git log origin/master..HEAD")]),t._v("\n比较的是当前节点以及远程push的分支之间的差别")]),t._v(" "),_("h3",{attrs:{id:"_13-2-三点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-三点"}},[t._v("#")]),t._v(" 13.2 三点")]),t._v(" "),_("p",[_("code",[t._v("git log master...experiment")]),t._v("\n展示这两个分支各自独有的提交\n"),_("code",[t._v("git log --left-right master...experiment")]),t._v("\n用箭头表明这些提交分别被哪个分支独有")]),t._v(" "),_("h3",{attrs:{id:"_13-3-多点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-多点"}},[t._v("#")]),t._v(" 13.3 多点")]),t._v(" "),_("p",[_("code",[t._v("git log A B ^C")]),t._v(" "),_("code",[t._v("git log A B --not C")]),t._v("\n查看在A或和B当中，但是不在C当中的提交")]),t._v(" "),_("h2",{attrs:{id:"_14-交互式工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-交互式工具"}},[t._v("#")]),t._v(" 14 交互式工具")]),t._v(" "),_("p",[_("code",[t._v("git add -i")]),t._v("\n会出现八个选项：")]),t._v(" "),_("ol",[_("li",[t._v("status")]),t._v(" "),_("li",[t._v("update")]),t._v(" "),_("li",[t._v("revert")]),t._v(" "),_("li",[t._v("add")]),t._v(" "),_("li",[t._v("patch")]),t._v(" "),_("li",[t._v("diff")]),t._v(" "),_("li",[t._v("quit")]),t._v(" "),_("li",[t._v("help")])]),t._v(" "),_("h3",{attrs:{id:"_14-1-交互式暂存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-交互式暂存"}},[t._v("#")]),t._v(" 14.1 交互式暂存")]),t._v(" "),_("ol",[_("li",[t._v("在"),_("code",[t._v("git add -i")]),t._v("后选择4（add）")]),t._v(" "),_("li",[t._v("选择代表需要添加文件的序号")]),t._v(" "),_("li",[t._v("选择过后该序号前会出现*")]),t._v(" "),_("li",[t._v("敲击回车会返回上层菜单")]),t._v(" "),_("li",[t._v("选择7退出后git状态会随之改变")])]),t._v(" "),_("h3",{attrs:{id:"_14-2-查看改动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-查看改动"}},[t._v("#")]),t._v(" 14.2 查看改动")]),t._v(" "),_("ol",[_("li",[t._v("在"),_("code",[t._v("git add- i")]),t._v("后选择6（diff）")]),t._v(" "),_("li",[t._v("选择代表要看改动文件的序号")]),t._v(" "),_("li",[t._v("等效于"),_("code",[t._v("git diff --cached")])])]),t._v(" "),_("h3",{attrs:{id:"_14-3-取消暂存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-取消暂存"}},[t._v("#")]),t._v(" 14.3 取消暂存")]),t._v(" "),_("ol",[_("li",[t._v("在"),_("code",[t._v("git add -i")]),t._v("后选择3（revert）")]),t._v(" "),_("li",[t._v("选择代表向撤销暂存文件的序号")])]),t._v(" "),_("h3",{attrs:{id:"_14-4-暂存补丁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-4-暂存补丁"}},[t._v("#")]),t._v(" 14.4 暂存补丁")]),t._v(" "),_("p",[t._v("可以通过这个功能把文件一部分添加进git，另一部分改动先保留在本地")]),t._v(" "),_("ol",[_("li",[t._v("在"),_("code",[t._v("git add -i")]),t._v("后选择5（patch）")]),t._v(" "),_("li",[t._v("选择代表需要补丁暂存文件的序号")]),t._v(" "),_("li",[t._v("git会把改动一个部分一个部分地询问")]),t._v(" "),_("li",[t._v("输入y则表示加入git暂存；n表示不加入")])]),t._v(" "),_("h2",{attrs:{id:"_15-stash储藏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-stash储藏"}},[t._v("#")]),t._v(" 15 stash储藏")]),t._v(" "),_("p",[t._v("将改动的内容储藏起来避免checkout的时候出现问题被覆盖，也避免其被commit并push")]),t._v(" "),_("h3",{attrs:{id:"_15-1-储藏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-储藏"}},[t._v("#")]),t._v(" 15.1 储藏")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("git stash")]),t._v("\n把我们本地所有没有commit的内容都暂存了起来，这样方便我们进行checkout或者是其他一些操作，而不会起冲突或者是其他的影响")]),t._v(" "),_("li",[_("code",[t._v("git stash --keep-index")]),t._v("\n只暂存没有add到暂存区的内容")]),t._v(" "),_("li",[_("code",[t._v("git stash -u")]),t._v("\nstash的时候将新创建并且还没有被git管理的文件也一并储藏起来")])]),t._v(" "),_("h3",{attrs:{id:"_15-2-还原"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-还原"}},[t._v("#")]),t._v(" 15.2 还原")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("git stash apply")]),t._v("\n记录仍将保留\n可以选择应用的记录\n"),_("code",[t._v("git stash apply stash@{2}")])]),t._v(" "),_("li",[_("code",[t._v("git stash pop")]),t._v("\n应用后记录会被删除\n只能还原栈顶的记录")]),t._v(" "),_("li",[_("code",[t._v("git stash apply --index")]),t._v("\n暂存文件的复原")])]),t._v(" "),_("h2",{attrs:{id:"_16-查找"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-查找"}},[t._v("#")]),t._v(" 16 查找")]),t._v(" "),_("h3",{attrs:{id:"_16-1-代码函数搜索"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-代码函数搜索"}},[t._v("#")]),t._v(" 16.1 代码函数搜索")]),t._v(" "),_("ol",[_("li",[t._v("展示函数出现过的位置\n"),_("code",[t._v("git grep 函数名")])]),t._v(" "),_("li",[t._v("展示函数出现过的具体位置\n"),_("code",[t._v("git grep -n 函数名")]),t._v("\n可以显示函数出现位置的行数")]),t._v(" "),_("li",[t._v("查找某一个版本的代码\n"),_("code",[t._v("git grep 函数名 git commit/tag号码")]),t._v("\n可以避免使用IDE工具checkout的步骤")])]),t._v(" "),_("h3",{attrs:{id:"_16-2-日志搜索"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-日志搜索"}},[t._v("#")]),t._v(" 16.2 日志搜索")]),t._v(" "),_("p",[_("code",[t._v("git log -L :函数名:文件名")]),t._v("\n可以查找文件名下该函数的变更，会展示出代码变更时间、对应的具体代码和修改人")])])}),[],!1,null,null,null);a.default=r.exports}}]);