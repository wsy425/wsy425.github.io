(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{506:function(a,t,s){"use strict";s.r(t);var _=s(29),r=Object(_.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-js认知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-js认知"}},[a._v("#")]),a._v(" 1 JS认知")]),a._v(" "),s("h3",{attrs:{id:"_1-1-js组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-js组成"}},[a._v("#")]),a._v(" 1.1 JS组成")]),a._v(" "),s("ol",[s("li",[a._v("ECMAScript，JS语法")]),a._v(" "),s("li",[a._v("DOM，页面文档对象模型")]),a._v(" "),s("li",[a._v("BOM，浏览器对象模型")])]),a._v(" "),s("h3",{attrs:{id:"_1-2-js书写位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-js书写位置"}},[a._v("#")]),a._v(" 1.2 JS书写位置")]),a._v(" "),s("ol",[s("li",[a._v("行内式\n"),s("ul",[s("li",[a._v("将单行或少量代买写在HTML标签的事件属性中（以on开头的属性）")]),a._v(" "),s("li",[a._v("HTML中推荐使用双引号，JS中推荐使用单引号")])])]),a._v(" "),s("li",[a._v("内嵌式\n"),s("code",[a._v("<script><\/script>")])]),a._v(" "),s("li",[a._v("外部式\n"),s("code",[a._v('<script scr="my.js"><\/script>')])])]),a._v(" "),s("h3",{attrs:{id:"_1-3-js注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-js注释"}},[a._v("#")]),a._v(" 1.3 JS注释")]),a._v(" "),s("ol",[s("li",[a._v("单行注释//（ctrl + /）")]),a._v(" "),s("li",[a._v("多行注释/*    */（shift + alt + a）")])]),a._v(" "),s("h2",{attrs:{id:"_2-输入输出语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-输入输出语句"}},[a._v("#")]),a._v(" 2 输入输出语句")]),a._v(" "),s("h3",{attrs:{id:"_2-1-alert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-alert"}},[a._v("#")]),a._v(" 2.1 alert")]),a._v(" "),s("ol",[s("li",[a._v("弹出警示框")]),a._v(" "),s("li",[a._v("语法\n"),s("code",[a._v("prompt('弹出的语句');")])])]),a._v(" "),s("h3",{attrs:{id:"_2-2-console"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-console"}},[a._v("#")]),a._v(" 2.2 console")]),a._v(" "),s("ol",[s("li",[a._v("控制台输出，用于测试")]),a._v(" "),s("li",[a._v("语法\n"),s("code",[a._v("console.log('输出的语句');")])])]),a._v(" "),s("h3",{attrs:{id:"_2-3-dir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-dir"}},[a._v("#")]),a._v(" 2.3 dir")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("console.dir(元素对象);")])]),a._v(" "),s("li",[a._v("打印DOM返回的元素对象")])]),a._v(" "),s("h3",{attrs:{id:"_2-4-prompt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-prompt"}},[a._v("#")]),a._v(" 2.4 prompt")]),a._v(" "),s("ol",[s("li",[a._v("弹出输入框")]),a._v(" "),s("li",[a._v("语法\n"),s("code",[a._v("prompt('请用户输入的提示语句');")])]),a._v(" "),s("li",[a._v("输入进来的值是字符串类型")])]),a._v(" "),s("h2",{attrs:{id:"_3-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量"}},[a._v("#")]),a._v(" 3 变量")]),a._v(" "),s("p",[a._v("变量用于存放数据，是内存中申请的一段空间")]),a._v(" "),s("h3",{attrs:{id:"_3-1-变量的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-变量的使用"}},[a._v("#")]),a._v(" 3.1 变量的使用")]),a._v(" "),s("h4",{attrs:{id:"_3-1-1-变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-变量声明"}},[a._v("#")]),a._v(" 3.1.1 变量声明")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("var 变量名;")])]),a._v(" "),s("li",[a._v("var是JS关键字，用于声明变量。使用后计算机自动为变量分配内存空间，不需要程序员管")])]),a._v(" "),s("h4",{attrs:{id:"_3-1-2-变量赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-变量赋值"}},[a._v("#")]),a._v(" 3.1.2 变量赋值")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("变量名 = 值;")])])]),a._v(" "),s("h4",{attrs:{id:"_3-1-3-变量初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-变量初始化"}},[a._v("#")]),a._v(" 3.1.3 变量初始化")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("var 变量名 = 值;")])])]),a._v(" "),s("h4",{attrs:{id:"_3-1-4-同时声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-同时声明"}},[a._v("#")]),a._v(" 3.1.4 同时声明")]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" 变量名"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    变量"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h4",{attrs:{id:"_3-1-5-可以不声明直接使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-5-可以不声明直接使用"}},[a._v("#")]),a._v(" 3.1.5 可以不声明直接使用")]),a._v(" "),s("ol",[s("li",[a._v("但是会变成全局变量")])]),a._v(" "),s("h3",{attrs:{id:"_3-2-变量命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-变量命名规范"}},[a._v("#")]),a._v(" 3.2 变量命名规范")]),a._v(" "),s("ol",[s("li",[a._v("由字母、数字、下划线、美元符号")]),a._v(" "),s("li",[a._v("严格区分大小写")]),a._v(" "),s("li",[a._v("不能以数字开头")]),a._v(" "),s("li",[a._v("不能是关键字和保留字")])]),a._v(" "),s("h3",{attrs:{id:"_3-3-检测数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-检测数据类型"}},[a._v("#")]),a._v(" 3.3 检测数据类型")]),a._v(" "),s("p",[s("code",[a._v("typeof 待检测变量")])]),a._v(" "),s("h2",{attrs:{id:"_4-数字型number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数字型number"}},[a._v("#")]),a._v(" 4 数字型Number")]),a._v(" "),s("p",[a._v("数字类型可以用来保存整数值，也可以保存浮点数")]),a._v(" "),s("h3",{attrs:{id:"_4-1-整型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-整型"}},[a._v("#")]),a._v(" 4.1 整型")]),a._v(" "),s("h3",{attrs:{id:"_4-2-浮点型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-浮点型"}},[a._v("#")]),a._v(" 4.2 浮点型")]),a._v(" "),s("h3",{attrs:{id:"_4-3-数字型进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-数字型进制"}},[a._v("#")]),a._v(" 4.3 数字型进制")]),a._v(" "),s("ol",[s("li",[a._v("八进制：数字前+0")]),a._v(" "),s("li",[a._v("16进制：数字前+0x")])]),a._v(" "),s("h3",{attrs:{id:"_4-4-数字范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-数字范围"}},[a._v("#")]),a._v(" 4.4 数字范围")]),a._v(" "),s("ol",[s("li",[a._v("最大值1.79e+308")]),a._v(" "),s("li",[a._v("最小值5e-324")])]),a._v(" "),s("h3",{attrs:{id:"_4-5-特殊值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-特殊值"}},[a._v("#")]),a._v(" 4.5 特殊值")]),a._v(" "),s("ol",[s("li",[a._v("无穷大：Infinity")]),a._v(" "),s("li",[a._v("无穷小：-Infinity")]),a._v(" "),s("li",[a._v("非数字：NaN")])]),a._v(" "),s("h3",{attrs:{id:"_4-6-数字判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-数字判断"}},[a._v("#")]),a._v(" 4.6 数字判断")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("isNaN()")]),a._v("判断是不是非数字")])]),a._v(" "),s("h3",{attrs:{id:"_4-7-其他类型转换成数字型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-其他类型转换成数字型"}},[a._v("#")]),a._v(" 4.7 其他类型转换成数字型")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("parseInt(字符串型变量)")]),a._v("变为整型\n"),s("ul",[s("li",[a._v("会去除数字之后的其他字符串")]),a._v(" "),s("li",[a._v("但是不能去除数字之前的字符串")])])]),a._v(" "),s("li",[s("code",[a._v("parseFloat(字符串型变量)")]),a._v("变为浮点型\n"),s("ul",[s("li",[a._v("会去除数字之后的其他字符串")]),a._v(" "),s("li",[a._v("但是不能去除数字之前的字符串")])])]),a._v(" "),s("li",[s("code",[a._v("Number(变量)")])]),a._v(" "),s("li",[a._v("利用算术运算隐式转换为数字型")])]),a._v(" "),s("h2",{attrs:{id:"_5-字符串型string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串型string"}},[a._v("#")]),a._v(" 5 字符串型String")]),a._v(" "),s("p",[a._v("推荐使用单引号")]),a._v(" "),s("h3",{attrs:{id:"_5-1-字符串嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-字符串嵌套"}},[a._v("#")]),a._v(" 5.1 字符串嵌套")]),a._v(" "),s("ol",[s("li",[a._v("外单内双进行嵌套")])]),a._v(" "),s("h3",{attrs:{id:"_5-2-字符串转义符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-字符串转义符"}},[a._v("#")]),a._v(" 5.2 字符串转义符")]),a._v(" "),s("ol",[s("li",[a._v("换行"),s("code",[a._v("\\n")])]),a._v(" "),s("li",[a._v("tab缩进"),s("code",[a._v("\\t")])]),a._v(" "),s("li",[a._v("空格"),s("code",[a._v("\\b")])])]),a._v(" "),s("h3",{attrs:{id:"_5-3-字符串的拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-字符串的拼接"}},[a._v("#")]),a._v(" 5.3 字符串的拼接")]),a._v(" "),s("ol",[s("li",[a._v("用+拼接")]),a._v(" "),s("li",[a._v("只要有一个部分是字符串，输出都是字符串，和其他数据类型没关系")]),a._v(" "),s("li",[a._v("变量可以直接把内容拼接到字符串里")])]),a._v(" "),s("h3",{attrs:{id:"_5-4-字符串常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-字符串常用方法"}},[a._v("#")]),a._v(" 5.4 字符串常用方法")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/jsref/jsref-obj-string.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("字符串常用方法"),s("OutboundLink")],1)]),a._v(" "),s("ol",[s("li",[a._v("返回长度"),s("code",[a._v("字符串名.length")])]),a._v(" "),s("li",[a._v("返回指定位置字符串内容"),s("code",[a._v("字符串名.charAt(位置索引)")])]),a._v(" "),s("li",[a._v("返回指定字符在字符串中首次出现的位置"),s("code",[a._v("字符串名.indexOf(查找的字符,起始的位置)")])]),a._v(" "),s("li",[a._v("判断子字符串的存在"),s("code",[a._v("字符串.includes(子字符串)")])]),a._v(" "),s("li",[a._v("大小写转换"),s("code",[a._v("字符串名.toLowerCase()|字符串名.toUpperCase()")])])]),a._v(" "),s("h3",{attrs:{id:"_5-5-其他类型转换成字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-其他类型转换成字符串"}},[a._v("#")]),a._v(" 5.5 其他类型转换成字符串")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("变量.toString()")])]),a._v(" "),s("li",[s("code",[a._v("String(变量)")]),a._v("函数强制转换")]),a._v(" "),s("li",[a._v("加号拼接")])]),a._v(" "),s("h3",{attrs:{id:"_5-6-字符串的不可变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-字符串的不可变"}},[a._v("#")]),a._v(" 5.6 字符串的不可变")]),a._v(" "),s("ol",[s("li",[a._v("指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间")]),a._v(" "),s("li",[a._v("因为字符串的不可变不要大量拼接字符串")])]),a._v(" "),s("h3",{attrs:{id:"_5-7-es5新增字符串方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-es5新增字符串方法"}},[a._v("#")]),a._v(" 5.7 ES5新增字符串方法")]),a._v(" "),s("h4",{attrs:{id:"_5-7-1-trim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-trim"}},[a._v("#")]),a._v(" 5.7.1 trim()")]),a._v(" "),s("ol",[s("li",[a._v("从字符串的两端删除空白字符")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("str.trim()")])]),a._v(" "),s("li",[a._v("不影响原字符串本身，返回的是一个新的字符串")])]),a._v(" "),s("h2",{attrs:{id:"_6-布尔型boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-布尔型boolean"}},[a._v("#")]),a._v(" 6 布尔型Boolean")]),a._v(" "),s("ol",[s("li",[a._v("true可以当1来看")]),a._v(" "),s("li",[a._v("false可以当0来看")])]),a._v(" "),s("h3",{attrs:{id:"_6-1-其他类型转换成布尔型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-其他类型转换成布尔型"}},[a._v("#")]),a._v(" 6.1 其他类型转换成布尔型")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("Boolean(变量)")])]),a._v(" "),s("li",[a._v("代表空的''|0|NaN|null|undefined转换成false")]),a._v(" "),s("li",[a._v("其他都是true")])]),a._v(" "),s("h2",{attrs:{id:"_7-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-运算符"}},[a._v("#")]),a._v(" 7 运算符")]),a._v(" "),s("p",[a._v("运算符（operator）也称为操作符，用于实现赋值、比较和执行算术运算等功能的符号")]),a._v(" "),s("h3",{attrs:{id:"_7-1-算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-算数运算符"}},[a._v("#")]),a._v(" 7.1 算数运算符")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/12/16/jHzUZP3Vwav6iLk.jpg",alt:"算数运算符汇总.jpg"}})]),a._v(" "),s("ol",[s("li",[a._v("浮点数存在阶段误差，不要判断浮点数是否相等")]),a._v(" "),s("li",[a._v("算数运算符的优先级和平时一样")])]),a._v(" "),s("h3",{attrs:{id:"_7-2-递增递减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-递增递减运算符"}},[a._v("#")]),a._v(" 7.2 递增递减运算符")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("++")]),a._v("递增，每次加1")]),a._v(" "),s("li",[s("code",[a._v("--")]),a._v("递减，每次减1")]),a._v(" "),s("li",[a._v("前置递增|递减：运算符在变量前面，先计算后输出")]),a._v(" "),s("li",[a._v("后置递增|递减：运算符在变量后面，先输出后计算")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出21，前置递增")]),a._v("\nage "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出20，后置递增")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 但是两个age都是11")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_7-3-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-比较运算符"}},[a._v("#")]),a._v(" 7.3 比较运算符")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/12/16/ZxR1udmONy3jor5.jpg",alt:"比较运算符汇总.jpg"}})]),a._v(" "),s("ol",[s("li",[s("code",[a._v("==")]),a._v("比较的时候会自动转换数据类型")]),a._v(" "),s("li",[s("code",[a._v("===")]),a._v("同时要求值和数据类型")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//true")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'18'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//false")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"_7-4-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-逻辑运算符"}},[a._v("#")]),a._v(" 7.4 逻辑运算符")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/12/16/cSAE8t6PZHRnlYy.jpg",alt:"逻辑运算符汇总.jpg"}})]),a._v(" "),s("ol",[s("li",[a._v("短路运算：当有多个表达式时，左边表达式可以确定结果时就不再进行有右边的运算")])]),a._v(" "),s("h4",{attrs:{id:"_7-4-1-断路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-1-断路"}},[a._v("#")]),a._v(" 7.4.1 &&断路")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("表达式1 && 表达式2")])]),a._v(" "),s("li",[a._v("表达式1真，返回表达式2")]),a._v(" "),s("li",[a._v("表达式1假，返回表达式1")])]),a._v(" "),s("h4",{attrs:{id:"_7-4-2-断路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-2-断路"}},[a._v("#")]),a._v(" 7.4.2 ||断路")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("表达式1 || 表达式2")])]),a._v(" "),s("li",[a._v("表达式1真，返回表达式1")]),a._v(" "),s("li",[a._v("表达式1假，返回表达式2")])]),a._v(" "),s("h3",{attrs:{id:"_7-5-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-赋值运算符"}},[a._v("#")]),a._v(" 7.5 赋值运算符")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/12/16/hXMkOCN9quIDUjG.jpg",alt:"赋值运算符汇总.jpg"}})]),a._v(" "),s("h3",{attrs:{id:"_7-6-运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-运算符优先级"}},[a._v("#")]),a._v(" 7.6 运算符优先级")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/12/16/IFoSA4dx8q5BlJ2.jpg",alt:"运算符优先级.jpg"}})]),a._v(" "),s("h2",{attrs:{id:"_8-流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-流程控制"}},[a._v("#")]),a._v(" 8 流程控制")]),a._v(" "),s("h3",{attrs:{id:"_8-1-顺序流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-顺序流程控制"}},[a._v("#")]),a._v(" 8.1 顺序流程控制")]),a._v(" "),s("p",[a._v("直接写就好")]),a._v(" "),s("h3",{attrs:{id:"_8-2-分支流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-分支流程控制"}},[a._v("#")]),a._v(" 8.2 分支流程控制")]),a._v(" "),s("h4",{attrs:{id:"_8-2-1-if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-1-if"}},[a._v("#")]),a._v(" 8.2.1 if")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    条件成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"_8-2-2-if-else双分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-2-if-else双分支"}},[a._v("#")]),a._v(" 8.2.2 if-else双分支")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    条件成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    条件不成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("if和else里只有一个语句能执行")])]),a._v(" "),s("h4",{attrs:{id:"_8-2-3-多分支语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-3-多分支语句"}},[a._v("#")]),a._v(" 8.2.3 多分支语句")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    条件"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    条件"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("不成立条件"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    所有条件都不成立时的执行语句\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h4",{attrs:{id:"_8-2-4-三元表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-4-三元表达式"}},[a._v("#")]),a._v(" 8.2.4 三元表达式")]),a._v(" "),s("ol",[s("li",[a._v("语法结构"),s("code",[a._v("条件表达式 ? 表达式1 : 表达式2")])]),a._v(" "),s("li",[a._v("执行思路\n"),s("ul",[s("li",[a._v("条件表达式真，返回表达式1")]),a._v(" "),s("li",[a._v("条件表达式假，返回表达式2")])])])]),a._v(" "),s("h4",{attrs:{id:"_8-2-5-switch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-5-switch"}},[a._v("#")]),a._v(" 8.2.5 switch")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("switch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("value1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        表达式与value1匹配时的执行语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("value2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        表达式与value2匹配时的执行语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        都不满足时的执行语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("匹配的要求是值和数据类型都相等才算匹配")]),a._v(" "),s("li",[a._v("要写break，否则switch会认为一直是匹配上的直接执行后续case的执行语句")])]),a._v(" "),s("h3",{attrs:{id:"_8-3-循环流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-循环流程控制"}},[a._v("#")]),a._v(" 8.3 循环流程控制")]),a._v(" "),s("h4",{attrs:{id:"_8-3-1-for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-1-for循环"}},[a._v("#")]),a._v(" 8.3.1 for循环")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("初始化变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("条件表达式；操作表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    循环体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"_8-3-2-while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-2-while循环"}},[a._v("#")]),a._v(" 8.3.2 while循环")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    循环体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"_8-3-3-do-while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-3-do-while循环"}},[a._v("#")]),a._v(" 8.3.3 do-while循环")]),a._v(" "),s("ol",[s("li",[a._v("语法结构")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    循环体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("限制性循环体再判断条件")])]),a._v(" "),s("h4",{attrs:{id:"_8-3-4-continue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-4-continue"}},[a._v("#")]),a._v(" 8.3.4 continue")]),a._v(" "),s("ol",[s("li",[a._v("立即跳出本次循环，继续下一次循环")])]),a._v(" "),s("h3",{attrs:{id:"_8-4-break"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-break"}},[a._v("#")]),a._v(" 8.4 break")]),a._v(" "),s("ol",[s("li",[a._v("立即跳出整个循环")])]),a._v(" "),s("h2",{attrs:{id:"_9-数组array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-数组array"}},[a._v("#")]),a._v(" 9 数组Array")]),a._v(" "),s("h3",{attrs:{id:"_9-1-创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-创建数组"}},[a._v("#")]),a._v(" 9.1 创建数组")]),a._v(" "),s("h4",{attrs:{id:"_9-1-1-new关键字创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-1-new关键字创建数组"}},[a._v("#")]),a._v(" 9.1.1  new关键字创建数组")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("var 数组名 = new Array();")])]),a._v(" "),s("li",[a._v("通过实例化Array构造对象创建的")]),a._v(" "),s("li",[s("code",[a._v("var 数组名 = new Array(n);")]),a._v("创建长度为n的空数组")]),a._v(" "),s("li",[s("code",[a._v("var 数组名 = new Array(x,y);")]),a._v("创建[ x,y]数组")])]),a._v(" "),s("h4",{attrs:{id:"_9-1-2-利用数组字面量创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-2-利用数组字面量创建数组"}},[a._v("#")]),a._v(" 9.1.2 利用数组字面量创建数组")]),a._v(" "),s("ol",[s("li",[a._v("数组字面量[]")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("var 数组名 = [];")])]),a._v(" "),s("li",[a._v("数组里的数据用逗号分隔")]),a._v(" "),s("li",[a._v("数组里的数据称为数组元素")])]),a._v(" "),s("h3",{attrs:{id:"_9-2-数组索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-数组索引"}},[a._v("#")]),a._v(" 9.2 数组索引")]),a._v(" "),s("ol",[s("li",[a._v("索引（下标）：用来访问数组元素的序列，从0开始")]),a._v(" "),s("li",[a._v("通过索引号访问数组元素"),s("code",[a._v("数组名[索引号]")])]),a._v(" "),s("li",[a._v("没有数组元素，访问结果为undefined")])]),a._v(" "),s("h3",{attrs:{id:"_9-3-数组长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-数组长度"}},[a._v("#")]),a._v(" 9.3 数组长度")]),a._v(" "),s("p",[s("code",[a._v("数组名.length")])]),a._v(" "),s("h3",{attrs:{id:"_9-4-数组新增元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-数组新增元素"}},[a._v("#")]),a._v(" 9.4 数组新增元素")]),a._v(" "),s("h4",{attrs:{id:"_9-4-1-修改length长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-1-修改length长度"}},[a._v("#")]),a._v(" 9.4.1 修改length长度")]),a._v(" "),s("p",[s("code",[a._v("数组名.length = 5")]),a._v("添加空元素")]),a._v(" "),s("h4",{attrs:{id:"_9-4-2-增加索引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-2-增加索引号"}},[a._v("#")]),a._v(" 9.4.2 增加索引号")]),a._v(" "),s("p",[s("code",[a._v("数组名[索引号] = 新加元素")]),a._v("追加元素")]),a._v(" "),s("h3",{attrs:{id:"_9-5-检测是否为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-检测是否为数组"}},[a._v("#")]),a._v(" 9.5 检测是否为数组")]),a._v(" "),s("h4",{attrs:{id:"_9-5-1-instanceof-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-1-instanceof-运算符"}},[a._v("#")]),a._v(" 9.5.1 instanceof 运算符")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("待检测内容 instanceof Array")])])]),a._v(" "),s("h4",{attrs:{id:"_9-5-2-isarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-2-isarray"}},[a._v("#")]),a._v(" 9.5.2 .isArray()")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("Array.isArray(待检测内容)")])]),a._v(" "),s("li",[a._v("ie9以上版本才支持")])]),a._v(" "),s("h3",{attrs:{id:"_9-6-添加数组元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-添加数组元素"}},[a._v("#")]),a._v(" 9.6 添加数组元素")]),a._v(" "),s("h4",{attrs:{id:"_9-6-1-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-1-push"}},[a._v("#")]),a._v(" 9.6.1 .push()")]),a._v(" "),s("ol",[s("li",[a._v("在尾部添加一个或多个数组元素")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.push(添加的元素)")])]),a._v(" "),s("li",[a._v("push完后返回的是新数组的长度")]),a._v(" "),s("li",[a._v("原数组也会发生变化")])]),a._v(" "),s("h4",{attrs:{id:"_9-6-2-unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-2-unshift"}},[a._v("#")]),a._v(" 9.6.2 .unshift()")]),a._v(" "),s("ol",[s("li",[a._v("在开头添加一个或多个数组元素")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.unshift(添加的元素)")])]),a._v(" "),s("li",[a._v("unshift完后返回的是新数组的长度")]),a._v(" "),s("li",[a._v("原数组也会发生变化")])]),a._v(" "),s("h3",{attrs:{id:"_9-7-删除数组元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-删除数组元素"}},[a._v("#")]),a._v(" 9.7 删除数组元素")]),a._v(" "),s("h4",{attrs:{id:"_9-7-1-pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-1-pop"}},[a._v("#")]),a._v(" 9.7.1 .pop()")]),a._v(" "),s("ol",[s("li",[a._v("删除数组最后的一个元素，一次只能删除一个元素")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.pop()")])]),a._v(" "),s("li",[a._v("pop完后返回被删除的元素")]),a._v(" "),s("li",[a._v("原数组也会发生变化")])]),a._v(" "),s("h4",{attrs:{id:"_9-7-2-shift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-2-shift"}},[a._v("#")]),a._v(" 9.7.2 .shift()")]),a._v(" "),s("ol",[s("li",[a._v("删除数组第一个的一个元素，一次只能删除一个元素")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.shift()")])]),a._v(" "),s("li",[a._v("shift完后返回被删除的元素")]),a._v(" "),s("li",[a._v("原数组也会发生变化")])]),a._v(" "),s("h3",{attrs:{id:"_9-8-数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-8-数组排序"}},[a._v("#")]),a._v(" 9.8 数组排序")]),a._v(" "),s("h4",{attrs:{id:"_9-8-1-reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-8-1-reverse"}},[a._v("#")]),a._v(" 9.8.1 .reverse()")]),a._v(" "),s("ol",[s("li",[a._v("翻转数组")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.reverse()")])])]),a._v(" "),s("h4",{attrs:{id:"_9-8-2-sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-8-2-sort"}},[a._v("#")]),a._v(" 9.8.2 .sort()")]),a._v(" "),s("ol",[s("li",[a._v("冒泡排序")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组.sort()")])]),a._v(" "),s("li",[a._v("这样排序是先看按照最高位排序，再按后面的位数排序，个位数可以用")]),a._v(" "),s("li")]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("数组"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 按照升序排序")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 按照降序排序")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h3",{attrs:{id:"_9-9-数组索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-9-数组索引"}},[a._v("#")]),a._v(" 9.9 数组索引")]),a._v(" "),s("h4",{attrs:{id:"_9-9-1-indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-9-1-indexof"}},[a._v("#")]),a._v(" 9.9.1 .indexOf()")]),a._v(" "),s("ol",[s("li",[a._v("查找数组中给定元素的第一个索引")]),a._v(" "),s("li",[a._v("不存在返回-1")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组名.indexOf(元素名,查找起始位置)")])])]),a._v(" "),s("h4",{attrs:{id:"_9-9-2-lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-9-2-lastindexof"}},[a._v("#")]),a._v(" 9.9.2 .lastIndexOf()")]),a._v(" "),s("ol",[s("li",[a._v("查找数组中给定元素的最后一个索引")]),a._v(" "),s("li",[a._v("不存在返回-1")]),a._v(" "),s("li",[a._v("语法``数组名.lastIndexOf(元素名)`")])]),a._v(" "),s("h3",{attrs:{id:"_9-10-数组转换成字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-10-数组转换成字符串"}},[a._v("#")]),a._v(" 9.10 数组转换成字符串")]),a._v(" "),s("h4",{attrs:{id:"_9-10-1-tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-10-1-tostring"}},[a._v("#")]),a._v(" 9.10.1 toString()")]),a._v(" "),s("ol",[s("li",[a._v("把数组转换成字符串，逗号分隔每一项")])]),a._v(" "),s("h3",{attrs:{id:"_9-10-2-join-分隔符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-10-2-join-分隔符"}},[a._v("#")]),a._v(" 9.10.2 join('分隔符')")]),a._v(" "),s("ol",[s("li",[a._v("把数组中的所有元素转换为一个字符串")]),a._v(" "),s("li",[a._v("分隔符默认为逗号")])]),a._v(" "),s("h3",{attrs:{id:"_9-11-数组切割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-11-数组切割"}},[a._v("#")]),a._v(" 9.11 数组切割")]),a._v(" "),s("h4",{attrs:{id:"_9-11-1-concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-11-1-concat"}},[a._v("#")]),a._v(" 9.11.1 .concat()")]),a._v(" "),s("ol",[s("li",[a._v("连接两个或多个数组")]),a._v(" "),s("li",[a._v("返回新数组")]),a._v(" "),s("li",[a._v("不影响原数组")])]),a._v(" "),s("h4",{attrs:{id:"_9-11-2-slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-11-2-slice"}},[a._v("#")]),a._v(" 9.11.2 .slice()")]),a._v(" "),s("ol",[s("li",[a._v("截取数组")]),a._v(" "),s("li",[a._v("返回新数组")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("数组名.slice(开始缩印,结束索引)")])])]),a._v(" "),s("h4",{attrs:{id:"_9-11-3-splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-11-3-splice"}},[a._v("#")]),a._v(" 9.11.3 .splice()")]),a._v(" "),s("ol",[s("li",[a._v("删除数组内元素")]),a._v(" "),s("li",[a._v("返回被删除的新数组")]),a._v(" "),s("li",[a._v("会影响原数组")])]),a._v(" "),s("h3",{attrs:{id:"_9-12-es5数组新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-12-es5数组新增方法"}},[a._v("#")]),a._v(" 9.12 ES5数组新增方法")]),a._v(" "),s("h4",{attrs:{id:"_9-12-1-遍历方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-12-1-遍历方法"}},[a._v("#")]),a._v(" 9.12.1 遍历方法")]),a._v(" "),s("h5",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[a._v("#")]),a._v(" forEach()")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("数值名.forEach(function(value,index,array){})")])]),a._v(" "),s("li",[a._v("value：数组当前项的值")]),a._v(" "),s("li",[a._v("index：数组当前项的索引")]),a._v(" "),s("li",[a._v("array：被遍历的数组本身")]),a._v(" "),s("li",[a._v("在forEach里面return不会终止迭代")])]),a._v(" "),s("h5",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[a._v("#")]),a._v(" filter()")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("数值名.filter(function(value,index,array){})")])]),a._v(" "),s("li",[a._v("filter方法用于创建一个新的数组，新数组中的元素是通过检测指定数组中符合条件的所有元素，主要用于筛选数组")]),a._v(" "),s("li",[a._v("返回的是一个新数组")])]),a._v(" "),s("h5",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[a._v("#")]),a._v(" some()")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("数值名.some(function(value,index,array){})")])]),a._v(" "),s("li",[a._v("some方法用于检测数组中断额元素是否满足指定条件")]),a._v(" "),s("li",[a._v("返回的是一个布尔值。如果查到这个元素，就返回true；如果查不到就返回false")]),a._v(" "),s("li",[a._v("如果找到第一个满足条件的元素，则终止循环，不再继续查找")]),a._v(" "),s("li",[a._v("在some里面return true会终止迭代")])]),a._v(" "),s("h2",{attrs:{id:"_10-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-函数"}},[a._v("#")]),a._v(" 10 函数")]),a._v(" "),s("ol",[s("li",[a._v("函数：封装了可被调用实行的代码块")])]),a._v(" "),s("h3",{attrs:{id:"_10-1-函数的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-函数的使用"}},[a._v("#")]),a._v(" 10.1 函数的使用")]),a._v(" "),s("h4",{attrs:{id:"_10-1-1-声明函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-1-声明函数"}},[a._v("#")]),a._v(" 10.1.1 声明函数")]),a._v(" "),s("h5",{attrs:{id:"利用函数关键字声明-命名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用函数关键字声明-命名函数"}},[a._v("#")]),a._v(" 利用函数关键字声明（命名函数）")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("function 函数名(形参){}")])]),a._v(" "),s("li",[a._v("function是声明函数的关键字")]),a._v(" "),s("li",[a._v("函数名一般是动词")])]),a._v(" "),s("h5",{attrs:{id:"函数表达式声明-匿名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数表达式声明-匿名函数"}},[a._v("#")]),a._v(" 函数表达式声明（匿名函数）")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("var 变量名 = function(形参){}")])])]),a._v(" "),s("h5",{attrs:{id:"通过构造函数生命"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过构造函数生命"}},[a._v("#")]),a._v(" 通过构造函数生命")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("var 函数名 = new Function('形参','函数体')")])]),a._v(" "),s("li",[a._v("所有函数都是Function的实例（对象）")]),a._v(" "),s("li",[a._v("Function里面参数都必须是字符串格式")]),a._v(" "),s("li",[a._v("执行效率低，也不方便书写，较少使用")])]),a._v(" "),s("h4",{attrs:{id:"_10-1-2-调用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-2-调用函数"}},[a._v("#")]),a._v(" 10.1.2 调用函数")]),a._v(" "),s("h5",{attrs:{id:"普通函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数"}},[a._v("#")]),a._v(" 普通函数")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("函数名();")])]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("函数名.call()")])])]),a._v(" "),s("h5",{attrs:{id:"对象里的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象里的方法"}},[a._v("#")]),a._v(" 对象里的方法")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("对象.函数名()")])])]),a._v(" "),s("h5",{attrs:{id:"构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("new 构造函数名()")])])]),a._v(" "),s("h5",{attrs:{id:"绑定事件函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定事件函数"}},[a._v("#")]),a._v(" 绑定事件函数")]),a._v(" "),s("ol",[s("li",[a._v("触发事件自动调用")])]),a._v(" "),s("h5",{attrs:{id:"定时器函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时器函数"}},[a._v("#")]),a._v(" 定时器函数")]),a._v(" "),s("ol",[s("li",[a._v("定时器自动调用")])]),a._v(" "),s("h5",{attrs:{id:"立即执行函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即执行函数"}},[a._v("#")]),a._v(" 立即执行函数")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("(function(){})()")]),a._v("自动调用")])]),a._v(" "),s("h3",{attrs:{id:"_10-2-函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-函数的参数"}},[a._v("#")]),a._v(" 10.2 函数的参数")]),a._v(" "),s("h4",{attrs:{id:"_10-2-1-形参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-1-形参"}},[a._v("#")]),a._v(" 10.2.1 形参")]),a._v(" "),s("ol",[s("li",[a._v("函数声明的是形参")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("function 函数名(形参1,形参2):{}")])]),a._v(" "),s("li",[a._v("是一种不用声明的变量")]),a._v(" "),s("li",[a._v("形参不赋值时默认为undefined")])]),a._v(" "),s("h4",{attrs:{id:"_10-2-2-实参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-2-实参"}},[a._v("#")]),a._v(" 10.2.2 实参")]),a._v(" "),s("ol",[s("li",[a._v("调用函数的是实参")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("函数名(实参1,实参2);")])])]),a._v(" "),s("h4",{attrs:{id:"_10-2-3-实参形参的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-3-实参形参的关系"}},[a._v("#")]),a._v(" 10.2.3 实参形参的关系")]),a._v(" "),s("ol",[s("li",[a._v("形参接受实参的数值")]),a._v(" "),s("li",[a._v("形参和实参可以不匹配")]),a._v(" "),s("li",[a._v("实参个数多于形参个数，后面的实参直接抛弃")])]),a._v(" "),s("h3",{attrs:{id:"_10-3-函数返回"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-函数返回"}},[a._v("#")]),a._v(" 10.3 函数返回")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("return 需要返回的结果;")])]),a._v(" "),s("li",[a._v("return具有终止函数的功能")]),a._v(" "),s("li",[a._v("return只能返回一个值，如果多个值返回最后一个值")]),a._v(" "),s("li",[a._v("函数如果没有return，则返回undefined")])]),a._v(" "),s("h3",{attrs:{id:"_10-4-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-arguments"}},[a._v("#")]),a._v(" 10.4 arguments")]),a._v(" "),s("ol",[s("li",[a._v("arguments是当前函数的内置对象，存储了传递的所有实参")]),a._v(" "),s("li",[a._v("语法")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("arguments展示形参为一个伪数组\n"),s("ul",[s("li",[a._v("可以遍历")]),a._v(" "),s("li",[a._v("具有length属性")]),a._v(" "),s("li",[a._v("按索引方式储存数据")]),a._v(" "),s("li",[a._v("不具有数组的push、pop等方法")])])]),a._v(" "),s("li",[a._v("只有函数有arguments对象")])]),a._v(" "),s("h3",{attrs:{id:"_10-5-函数的this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-函数的this"}},[a._v("#")]),a._v(" 10.5 函数的this")]),a._v(" "),s("ol",[s("li",[a._v("this的指向是当我们调用函数的时候确定的")]),a._v(" "),s("li",[a._v("一般指向调用者")]),a._v(" "),s("li",[a._v("构造函数里的this和构造函数原型对象里的this都指向生成的实例对象")])]),a._v(" "),s("h4",{attrs:{id:"_10-5-1-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-1-call"}},[a._v("#")]),a._v(" 10.5.1 call()")]),a._v(" "),s("ol",[s("li",[a._v("可以调用函数")]),a._v(" "),s("li",[a._v("改变this指向")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("函数名.call(this指向,实参)")])]),a._v(" "),s("li",[a._v("主要作用是实现继承。在子构造函数里用call调用父构造函数"),s("code",[a._v("父构造函数名.call(this,参数)")])])]),a._v(" "),s("h4",{attrs:{id:"_10-5-2-apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-2-apply"}},[a._v("#")]),a._v(" 10.5.2 apply()")]),a._v(" "),s("ol",[s("li",[a._v("可以调用函数，也可以改变this指向")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("函数名.apply(this指向,[实参])")])]),a._v(" "),s("li",[a._v("实参的传递必须使用数组的方式")]),a._v(" "),s("li",[a._v("可以实现数组最大最小值的实现"),s("code",[a._v("Math.max.apply(Math,数组)")])])]),a._v(" "),s("h4",{attrs:{id:"_10-5-3-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-3-bind"}},[a._v("#")]),a._v(" 10.5.3 bind()")]),a._v(" "),s("ol",[s("li",[a._v("不会调用函数，但能改变函数内部this指向")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("函数名.bind(this指向,实参)")])]),a._v(" "),s("li",[a._v("返回由指定的this值和初始化参数改造的原函数拷贝")]),a._v(" "),s("li",[a._v("应用场景：有的函数不需要立即调用，但又想改变函数内部this指向")])]),a._v(" "),s("h3",{attrs:{id:"_10-6-高阶函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-高阶函数"}},[a._v("#")]),a._v(" 10.6 高阶函数")]),a._v(" "),s("ol",[s("li",[a._v("高阶函数是对其他函数进行操作的含糊，它接收函数作为参数或将函数作为返回值输出")])]),a._v(" "),s("h2",{attrs:{id:"_11-作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-作用域"}},[a._v("#")]),a._v(" 11 作用域")]),a._v(" "),s("h3",{attrs:{id:"_11-1-作用域概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-作用域概述"}},[a._v("#")]),a._v(" 11.1 作用域概述")]),a._v(" "),s("ol",[s("li",[a._v("作用域：限定代码中用到的名字可用性的代码范围")]),a._v(" "),s("li",[a._v("作用域的目的是提高程序的可靠性，减少命名冲突")]),a._v(" "),s("li",[a._v("作用域分为全局作用域和局部作用域")]),a._v(" "),s("li",[a._v("全局作用域：整个scrip标签或者一个单独的js文件")]),a._v(" "),s("li",[a._v("局部作用域：只在函数内部，也可以叫做函数作用域")]),a._v(" "),s("li",[a._v("不同作用域下命名不冲突")])]),a._v(" "),s("h3",{attrs:{id:"_11-2-变量的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-变量的作用域"}},[a._v("#")]),a._v(" 11.2 变量的作用域")]),a._v(" "),s("h4",{attrs:{id:"_11-2-1-全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-1-全局变量"}},[a._v("#")]),a._v(" 11.2.1 全局变量")]),a._v(" "),s("ol",[s("li",[a._v("在全局作用域下的变量")]),a._v(" "),s("li",[a._v("除了全局状态下声明变量还有在函数内部不声明直接赋值的变量也是全局变量")])]),a._v(" "),s("h4",{attrs:{id:"_11-2-2-局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-2-局部变量"}},[a._v("#")]),a._v(" 11.2.2 局部变量")]),a._v(" "),s("ol",[s("li",[a._v("在局部作用域下的变量")]),a._v(" "),s("li",[a._v("只能在函数内部使用")]),a._v(" "),s("li",[a._v("函数的形参也可以看作局部变量")])]),a._v(" "),s("h4",{attrs:{id:"_11-2-3-全局效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-3-全局效率"}},[a._v("#")]),a._v(" 11.2.3 全局效率")]),a._v(" "),s("ol",[s("li",[a._v("全局变量只有浏览器关闭的时候才会销毁，比较占内存资源")]),a._v(" "),s("li",[a._v("局部变量程序执行完毕就会销毁，比较节约内容资源")])]),a._v(" "),s("h3",{attrs:{id:"_11-3-块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-块级作用域"}},[a._v("#")]),a._v(" 11.3 块级作用域")]),a._v(" "),s("ol",[s("li",[a._v("目前js没有块级作用域")]),a._v(" "),s("li",[a._v("在es6时新增了块级作用域")]),a._v(" "),s("li",[a._v("块级作用域：用{}包含的")])]),a._v(" "),s("h3",{attrs:{id:"_11-4-作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-作用域链"}},[a._v("#")]),a._v(" 11.4 作用域链")]),a._v(" "),s("ol",[s("li",[a._v("内部函数访问外部函数的变量采取的是链式查找的方式来决定是哪个值")]),a._v(" "),s("li",[a._v("作用域链：这种链式查找方式结构")]),a._v(" "),s("li",[a._v("就近原则")])]),a._v(" "),s("h2",{attrs:{id:"_12-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-闭包"}},[a._v("#")]),a._v(" 12 闭包")]),a._v(" "),s("h3",{attrs:{id:"_12-1-变量作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-变量作用域"}},[a._v("#")]),a._v(" 12.1 变量作用域")]),a._v(" "),s("ol",[s("li",[a._v("函数内部可以使用全局变量")]),a._v(" "),s("li",[a._v("函数外部不可以使用局部变量")]),a._v(" "),s("li",[a._v("当函数执行完毕，本作用域内的局部变量会销毁")])]),a._v(" "),s("h3",{attrs:{id:"_12-2-闭包定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-闭包定义"}},[a._v("#")]),a._v(" 12.2 闭包定义")]),a._v(" "),s("ol",[s("li",[a._v("闭包(closure)指有权访问另一个函数作用域中变量的函数")])]),a._v(" "),s("h3",{attrs:{id:"_12-3-闭包作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-闭包作用"}},[a._v("#")]),a._v(" 12.3 闭包作用")]),a._v(" "),s("ol",[s("li",[a._v("延伸了变量的作用范围")])]),a._v(" "),s("h2",{attrs:{id:"_13-拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-拷贝"}},[a._v("#")]),a._v(" 13 拷贝")]),a._v(" "),s("ol",[s("li",[a._v("浅拷贝只是拷贝一层，更深层次对象级别的只拷贝引用，只拷贝地址")]),a._v(" "),s("li",[a._v("深拷贝拷贝多层，每一个级别的数据都会拷贝")])]),a._v(" "),s("h3",{attrs:{id:"_13-1-浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-浅拷贝"}},[a._v("#")]),a._v(" 13.1 浅拷贝")]),a._v(" "),s("ol",[s("li",[a._v("ES6新语法"),s("code",[a._v("Object.assign(用于存储的变量名,被拷贝的变量名)")])])]),a._v(" "),s("h3",{attrs:{id:"_13-2-深拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-深拷贝"}},[a._v("#")]),a._v(" 13.2 深拷贝")]),a._v(" "),s("ol",[s("li",[a._v("通过递归函数来进行深拷贝")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("deepCopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("oldObj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" k "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" oldObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" oldObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("deepCopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("deepCopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br")])]),s("h2",{attrs:{id:"_14-预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-预解析"}},[a._v("#")]),a._v(" 14 预解析")]),a._v(" "),s("h3",{attrs:{id:"_14-1-js代码运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-js代码运行"}},[a._v("#")]),a._v(" 14.1 JS代码运行")]),a._v(" "),s("ol",[s("li",[a._v("预解析：js引擎会把里面所有的var还有function提升到当前作用域的最前面")]),a._v(" "),s("li",[a._v("代码执行：按照代码书写的顺序从上往下执行")])]),a._v(" "),s("h3",{attrs:{id:"_14-2-变量预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-变量预解析"}},[a._v("#")]),a._v(" 14.2 变量预解析")]),a._v(" "),s("ol",[s("li",[a._v("变量预解析又叫变量提升")]),a._v(" "),s("li",[a._v("只提升变量声明不提升赋值操作")])]),a._v(" "),s("h3",{attrs:{id:"_14-3-函数预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-函数预解析"}},[a._v("#")]),a._v(" 14.3 函数预解析")]),a._v(" "),s("ol",[s("li",[a._v("函数预解析又叫函数提升")]),a._v(" "),s("li",[a._v("只提升函数声明不调用")]),a._v(" "),s("li",[a._v("函数预解析只适用于用函数关键字声明的情况")])]),a._v(" "),s("h2",{attrs:{id:"_15-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-对象"}},[a._v("#")]),a._v(" 15 对象")]),a._v(" "),s("ol",[s("li",[a._v("对象是一组无需的相关属性和方法的集合")]),a._v(" "),s("li",[a._v("属性：事物的特征")]),a._v(" "),s("li",[a._v("方法：事物的行为")])]),a._v(" "),s("h3",{attrs:{id:"_15-1-创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-创建对象"}},[a._v("#")]),a._v(" 15.1 创建对象")]),a._v(" "),s("h4",{attrs:{id:"_15-1-1-利用字面量创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-1-利用字面量创建对象"}},[a._v("#")]),a._v(" 15.1.1 利用字面量创建对象")]),a._v(" "),s("ol",[s("li",[a._v("对象字面量为{}")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//属性")]),a._v("\n    uname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'qww'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//方法")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("sayHi")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("里面的属性或者方法采取键值对的形式")]),a._v(" "),s("li",[a._v("多个属性或者方法中间用逗号隔开")]),a._v(" "),s("li",[a._v("方法后面跟的是一个匿名函数")])]),a._v(" "),s("h4",{attrs:{id:"_15-1-2-利用new-object创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-2-利用new-object创建对象"}},[a._v("#")]),a._v(" 15.1.2 利用new Object创建对象")]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("uname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'qww'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("sayHi")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ol",[s("li",[a._v("利用等号赋值的方法添加对象的属性和方法")]),a._v(" "),s("li",[a._v("每个属性和方法之间用分号结束")])]),a._v(" "),s("h4",{attrs:{id:"_15-1-3-利用构造函数创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-3-利用构造函数创建对象"}},[a._v("#")]),a._v(" 15.1.3 利用构造函数创建对象")]),a._v(" "),s("ol",[s("li",[a._v("构造函数：把对象里相同的属性和方法抽象出来封装到函数里面")]),a._v(" "),s("li",[a._v("语法规范")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("构造函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("属性 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("方法")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("构造函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("构造函数名字首字母大写")]),a._v(" "),s("li",[a._v("构造函数不需要return就可以返回结果")]),a._v(" "),s("li",[a._v("调用构造函数必须使用new")]),a._v(" "),s("li",[a._v("属性和方法前面必须添加this")]),a._v(" "),s("li",[a._v("对象是一个具体的事物，特指某一个；构造函数是一个大类，类似于其他语言的类")]),a._v(" "),s("li",[a._v("利用构造函数创建对象的过程也叫对象的实例化")])]),a._v(" "),s("h3",{attrs:{id:"_15-2-使用对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-使用对象"}},[a._v("#")]),a._v(" 15.2 使用对象")]),a._v(" "),s("h4",{attrs:{id:"_15-2-1-调用对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-1-调用对象属性"}},[a._v("#")]),a._v(" 15.2.1 调用对象属性")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("对象名.属性名")])]),a._v(" "),s("li",[s("code",[a._v("对象名['属性名']")])])]),a._v(" "),s("h4",{attrs:{id:"_15-2-2-调用对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-2-调用对象方法"}},[a._v("#")]),a._v(" 15.2.2 调用对象方法")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("对象名.方法名()")])]),a._v(" "),s("li",[a._v("不能忘记添加小括号")])]),a._v(" "),s("h3",{attrs:{id:"_15-3-new关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-new关键字"}},[a._v("#")]),a._v(" 15.3 new关键字")]),a._v(" "),s("ol",[s("li",[a._v("new构造函数可以在内存中创建了一个空的对象")]),a._v(" "),s("li",[a._v("this指向刚才创建的空对象")]),a._v(" "),s("li",[a._v("执行构造函数里面的代码，给空对象添加属性和方法")]),a._v(" "),s("li",[a._v("返回这个对象（所以构造函数不需要return）")])]),a._v(" "),s("h3",{attrs:{id:"_15-4-遍历对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-遍历对象"}},[a._v("#")]),a._v(" 15.4 遍历对象")]),a._v(" "),s("ol",[s("li",[a._v("for in语句可以对数组或者对象的属性进行循环操作")]),a._v(" "),s("li",[a._v("语法")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" k "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出的是属性名")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//输出的属性值")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"_15-5-es5新增方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-es5新增方法"}},[a._v("#")]),a._v(" 15.5 ES5新增方法")]),a._v(" "),s("h4",{attrs:{id:"_15-5-1-object-definerproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-1-object-definerproperty"}},[a._v("#")]),a._v(" 15.5.1 Object.definerProperty()")]),a._v(" "),s("ol",[s("li",[a._v("定义对象中新属性或修改原有的属性")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("Object.definerProperty(目标对象,属性名,descriptor)")])]),a._v(" "),s("li",[a._v("descriptor表示目标属性所拥有的特性，需要以对象形式书写")]),a._v(" "),s("li",[a._v("descriptor四个属性\n"),s("ul",[s("li",[a._v("value：设置属性的值，默认为undefined")]),a._v(" "),s("li",[a._v("writable：值是否可以重写，默认为false")]),a._v(" "),s("li",[a._v("enumerable：目标属性是否可以被枚举，默认为false，不允许该属性被遍历出来")]),a._v(" "),s("li",[a._v("configurable：目标属性是否可以被删除或是否可以再次修改特性，默认为false")])])])]),a._v(" "),s("h2",{attrs:{id:"_16-内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-内置对象"}},[a._v("#")]),a._v(" 16 内置对象")]),a._v(" "),s("ol",[s("li",[a._v("JS中对象分成3种：自定义对象、内置对象、浏览器对象")]),a._v(" "),s("li",[a._v("内置对象：JS语言自带的一些对象，供开发者使用，并提供了一些常用的或是最基本的必要功能（属性和方法）")])]),a._v(" "),s("h3",{attrs:{id:"_16-1-math内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-math内置对象"}},[a._v("#")]),a._v(" 16.1 Math内置对象")]),a._v(" "),s("ol",[s("li",[a._v("Math不是一个函数对象，不是一个构造器，不需要New来调用，而是直接使用")])]),a._v(" "),s("h4",{attrs:{id:"_16-1-1-math常用属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-1-math常用属性和方法"}},[a._v("#")]),a._v(" 16.1.1 Math常用属性和方法")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("Math.PI")]),a._v("圆周率")]),a._v(" "),s("li",[s("code",[a._v("Math.floor()")]),a._v("向下取整")]),a._v(" "),s("li",[s("code",[a._v("Math.ceil()")]),a._v("向上取整")]),a._v(" "),s("li",[s("code",[a._v("Math.round()")]),a._v("四舍五入，就近取整，-3.5取-3")]),a._v(" "),s("li",[s("code",[a._v("Math.abs()")]),a._v("绝对值，可以隐式转换，会把字符串转换成数字型")]),a._v(" "),s("li",[s("code",[a._v("Math.max/min()")]),a._v("最大、最小值")]),a._v(" "),s("li",[s("code",[a._v("Math.random()")]),a._v("0~1的随机数")])]),a._v(" "),s("h3",{attrs:{id:"_16-2-日期内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-日期内置对象"}},[a._v("#")]),a._v(" 16.2 日期内置对象")]),a._v(" "),s("ol",[s("li",[a._v("Date实例用来处理日期和时间")]),a._v(" "),s("li",[a._v("Date是一个构造函数，必须使用New调用")])]),a._v(" "),s("h4",{attrs:{id:"_16-2-1-使用date"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-1-使用date"}},[a._v("#")]),a._v(" 16.2.1 使用Date")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("var date = new Date();")])]),a._v(" "),s("li",[a._v("如果没有参数返回系统的当前时间")])]),a._v(" "),s("h4",{attrs:{id:"_16-2-2-参数常用写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-2-参数常用写法"}},[a._v("#")]),a._v(" 16.2.2 参数常用写法")]),a._v(" "),s("ol",[s("li",[a._v("数字型"),s("code",[a._v("2021,03,09")]),a._v("月份会多1，因为从0开始记录")]),a._v(" "),s("li",[a._v("字符串型"),s("code",[a._v("'2021-03-09 16:58:10'")]),a._v(" 常用")])]),a._v(" "),s("h4",{attrs:{id:"_16-2-3-日期格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-3-日期格式化"}},[a._v("#")]),a._v(" 16.2.3 日期格式化")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/03/09/9SXKFgviL7lpceA.jpg",alt:"日期格式化方法.jpg"}})]),a._v(" "),s("ol",[s("li",[a._v("月份返回的会小1个月")]),a._v(" "),s("li",[a._v("返回星期的时候，周日返回的是0")])]),a._v(" "),s("h4",{attrs:{id:"_16-2-4-获取时间戳"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-4-获取时间戳"}},[a._v("#")]),a._v(" 16.2.4 获取时间戳")]),a._v(" "),s("ol",[s("li",[a._v("时间戳是距离1970年1月1日的总毫秒数")]),a._v(" "),s("li",[s("code",[a._v("Date.valueOf()")])]),a._v(" "),s("li",[s("code",[a._v("Date.getTime()")])]),a._v(" "),s("li",[a._v("可简化为"),s("code",[a._v("var date1 = +new Date();")]),a._v("，最常用的写法")]),a._v(" "),s("li",[a._v("H5新增的方法"),s("code",[a._v("Date.now()")])])]),a._v(" "),s("h2",{attrs:{id:"_17-基本包装类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-基本包装类型"}},[a._v("#")]),a._v(" 17 基本包装类型")]),a._v(" "),s("ol",[s("li",[a._v("基本包装类型就是把简单数据类型包装成为了复杂数据类型，使得简单数据类型有了属性和方法")]),a._v(" "),s("li",[a._v("过程：\n"),s("ul",[s("li",[a._v("把简单数据类型包装为复杂数据类型")]),a._v(" "),s("li",[a._v("把临时变量的值给str")]),a._v(" "),s("li",[a._v("销毁临时变量")])])]),a._v(" "),s("li",[a._v("为了方便操作基本数据类型，JavaScript提供了三个特殊的引用类型：String、Number和Boolean")])]),a._v(" "),s("h2",{attrs:{id:"_18-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-数据类型"}},[a._v("#")]),a._v(" 18 数据类型")]),a._v(" "),s("h3",{attrs:{id:"_18-1-堆和栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-堆和栈"}},[a._v("#")]),a._v(" 18.1 堆和栈")]),a._v(" "),s("p",[a._v("其实JavaScript中没有堆和栈的概念，但可以方便理解代码的执行方式")]),a._v(" "),s("h4",{attrs:{id:"_18-1-1-栈-操作系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-1-栈-操作系统"}},[a._v("#")]),a._v(" 18.1.1 栈（操作系统）")]),a._v(" "),s("ol",[s("li",[a._v("由操作系统自动分配释放存放函数的参数值、局部变量的值等")]),a._v(" "),s("li",[a._v("其操作方式类似于数据结构中的栈")]),a._v(" "),s("li",[a._v("简单数据类型存放在栈里面")])]),a._v(" "),s("h4",{attrs:{id:"_18-1-2-堆-操作系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-2-堆-操作系统"}},[a._v("#")]),a._v(" 18.1.2 堆（操作系统）")]),a._v(" "),s("ol",[s("li",[a._v("存储复杂类型（对象）")]),a._v(" "),s("li",[a._v("一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收")])]),a._v(" "),s("h3",{attrs:{id:"_18-2-简单数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-简单数据类型"}},[a._v("#")]),a._v(" 18.2 简单数据类型")]),a._v(" "),s("ol",[s("li",[a._v("简单数据类型又叫作基本数据类型或者值类型")]),a._v(" "),s("li",[a._v("值类型：在存储时变量中存储的是值本身")]),a._v(" "),s("li",[a._v("string、number、boolean、undefined、null")]),a._v(" "),s("li",[a._v("简单数据类型null返回的是一个空对象")])]),a._v(" "),s("h4",{attrs:{id:"_18-2-1-简单数据类型内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-1-简单数据类型内存分配"}},[a._v("#")]),a._v(" 18.2.1 简单数据类型内存分配")]),a._v(" "),s("ol",[s("li",[a._v("简单数据类型存放在栈里面，里面直接开辟一个空间存放的是值")])]),a._v(" "),s("h3",{attrs:{id:"_18-3-复杂数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-复杂数据类型"}},[a._v("#")]),a._v(" 18.3 复杂数据类型")]),a._v(" "),s("ol",[s("li",[a._v("复杂数据类型又叫引用类型")]),a._v(" "),s("li",[a._v("通过new关键字创建的对象（系统对象、自定义对象），如Object、Array、Date等")])]),a._v(" "),s("h4",{attrs:{id:"_18-3-1-复杂数据类型内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-1-复杂数据类型内存分配"}},[a._v("#")]),a._v(" 18.3.1 复杂数据类型内存分配")]),a._v(" "),s("ol",[s("li",[a._v("复杂数据类型首先在栈里存放地址，16进制")]),a._v(" "),s("li",[a._v("然后栈中的地址指向堆里的数据")])]),a._v(" "),s("h2",{attrs:{id:"_19-面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-面向对象"}},[a._v("#")]),a._v(" 19 面向对象")]),a._v(" "),s("h3",{attrs:{id:"_19-1-面向对象编程介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-面向对象编程介绍"}},[a._v("#")]),a._v(" 19.1 面向对象编程介绍")]),a._v(" "),s("ol",[s("li",[a._v("面向过程，POP(Process-oriented programming)。\n"),s("ul",[s("li",[a._v("分析出解决问题所需的步骤，然后用函数把步骤一步步实现，使用的时候再一个个依次调用")]),a._v(" "),s("li",[a._v("分析好步骤，按照步骤解决问题")])])]),a._v(" "),s("li",[a._v("面向对象，OOP(Object Oriented Programming)\n"),s("ul",[s("li",[a._v("把事务分解成为一个个对象，然后由对象之间分工与合作")]),a._v(" "),s("li",[a._v("以对象功能划分问题，而不是步骤")]),a._v(" "),s("li",[a._v("特点：\n"),s("ul",[s("li",[a._v("封装性")]),a._v(" "),s("li",[a._v("继承性")]),a._v(" "),s("li",[a._v("多态性")])])])])]),a._v(" "),s("li",[a._v("两者对比\n"),s("ul",[s("li",[a._v("面向过程\n-1 优点：性能比面向对象高，适合跟硬件联系很紧密的东西\n"),s("ul",[s("li",[a._v("1缺点没：有面向对象易维护、易复用、易扩展")])])]),a._v(" "),s("li",[a._v("面向11对象\n"),s("ul",[s("li",[a._v("优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，是系统更佳灵活")]),a._v(" "),s("li",[a._v("缺点：性能比面向过程低")])])])])])]),a._v(" "),s("h3",{attrs:{id:"_19-2-es6中的类和对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-es6中的类和对象"}},[a._v("#")]),a._v(" 19.2 ES6中的类和对象")]),a._v(" "),s("h4",{attrs:{id:"_19-2-1-面向对象的思维特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-1-面向对象的思维特点"}},[a._v("#")]),a._v(" 19.2.1 面向对象的思维特点")]),a._v(" "),s("ol",[s("li",[a._v("抽取（抽象）对象共用的属性和行为组织（封装）成一个类（模板）")]),a._v(" "),s("li",[a._v("对类进行实例化，获取类的对象")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-2-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-2-对象"}},[a._v("#")]),a._v(" 19.2.2 对象")]),a._v(" "),s("ol",[s("li",[a._v("对象是一个具体的事物")]),a._v(" "),s("li",[a._v("在JavaScript中，对象是一组无需的相关属性和方法的集合，所有的事物都是对象")]),a._v(" "),s("li",[a._v("对象由属性和方法组成\n"),s("ul",[s("li",[a._v("属性：事物的特征，在对象中用属性来表示")]),a._v(" "),s("li",[a._v("方法：事物的行为，在对象中用方法来表示")])])])]),a._v(" "),s("h4",{attrs:{id:"_19-2-3-类class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-3-类class"}},[a._v("#")]),a._v(" 19.2.3 类class")]),a._v(" "),s("ol",[s("li",[a._v("ES6中新增了类的概念，可以使用class关键字声明一个类，之后以这个类来实例化对象")]),a._v(" "),s("li",[a._v("类抽象了对象的公共部分，泛指某一大类")]),a._v(" "),s("li",[a._v("对象特指某一个，通过类实例化一个具体的对象")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-4-创建类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-4-创建类"}},[a._v("#")]),a._v(" 19.2.4 创建类")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("class 类名{类内容}")])]),a._v(" "),s("li",[a._v("类名习惯首字母大写")]),a._v(" "),s("li",[a._v("创建实例"),s("code",[a._v("var 对象名 = new 类名();")])]),a._v(" "),s("li",[a._v("类必须使用new实例化对象")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-5-类constructor构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-5-类constructor构造函数"}},[a._v("#")]),a._v(" 19.2.5 类constructor构造函数")]),a._v(" "),s("ol",[s("li",[a._v("constructor()方法是类的构造函数，用于传递参数，返回实例对象")]),a._v(" "),s("li",[a._v("通过new命令生成对象实例，自动调用该方法")]),a._v(" "),s("li",[a._v("如果没有显示定义，类内部会自动给我们创建一个constructor()")]),a._v(" "),s("li",[a._v("语法")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" 类名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("construction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("形参")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        实参赋值\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("构造函数不需要加function")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-6-类添加方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-6-类添加方法"}},[a._v("#")]),a._v(" 19.2.6 类添加方法")]),a._v(" "),s("ol",[s("li",[a._v("把方法直接写在类里面即可")]),a._v(" "),s("li",[a._v("类里面所有的函数不需要function")]),a._v(" "),s("li",[a._v("在类里面所有函数之间不需要添加逗号")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-7-类的继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-7-类的继承"}},[a._v("#")]),a._v(" 19.2.7 类的继承")]),a._v(" "),s("ol",[s("li",[a._v("子类可以继承父类的属性和方法")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("class 子类名 extends 父类名{}")])]),a._v(" "),s("li",[a._v("继承中存在就近原则，子类有的方法直接调用，没有再去查找父类")])]),a._v(" "),s("h5",{attrs:{id:"super关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#super关键字"}},[a._v("#")]),a._v(" super关键字")]),a._v(" "),s("ol",[s("li",[a._v("用于访问和调用对象父类上的函数。可以调用父类的构造函数，也可以调用父类的普通函数")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("super()")]),a._v("调用父类construction构造函数")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("super.父类方法()")]),a._v("调用父类的函数函数")]),a._v(" "),s("li",[a._v("super()必须在子类this之前调用")])]),a._v(" "),s("h4",{attrs:{id:"_19-2-8-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-8-注意点"}},[a._v("#")]),a._v(" 19.2.8 注意点")]),a._v(" "),s("ol",[s("li",[a._v("在ES6中类没有变量提升，所以必须先定义类，才能通过类实例化对象")]),a._v(" "),s("li",[a._v("类里共有的属性和方法一定要加this使用")]),a._v(" "),s("li",[a._v("类中this指向问题\n"),s("ul",[s("li",[a._v("在construction里面的this指向实例对象")]),a._v(" "),s("li",[a._v("方法里面的this指向这个方法的调用者")])])])]),a._v(" "),s("h2",{attrs:{id:"_20-构造函数和原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-构造函数和原型"}},[a._v("#")]),a._v(" 20 构造函数和原型")]),a._v(" "),s("p",[s("strong",[a._v("面试重点")])]),a._v(" "),s("h3",{attrs:{id:"_20-1-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-构造函数"}},[a._v("#")]),a._v(" 20.1 构造函数")]),a._v(" "),s("ol",[s("li",[a._v("构造函数是一种特殊的函数，主要用来初始化对象。总和new一起使用")]),a._v(" "),s("li",[a._v("构造函数用于创建某一类对象，其首字母大写")]),a._v(" "),s("li",[a._v("构造函数要和new一起使用才有意义")]),a._v(" "),s("li",[a._v("new在执行时会做\n"),s("ol",[s("li",[a._v("在内存中创建一个新的空对象")]),a._v(" "),s("li",[a._v("让this指向这个新的对象")]),a._v(" "),s("li",[a._v("执行构造函数里面的代码，给这个新对象添加属性和方法")]),a._v(" "),s("li",[a._v("返回这个新对象（所以构造函数里面不需要return）")])])]),a._v(" "),s("li",[a._v("成员：构造函数中的属性和方法")]),a._v(" "),s("li",[a._v("静态成员：在构造函数本上添加的成员，只能由构造函数本身来访问。在构造函数本身上添加的成员")]),a._v(" "),s("li",[a._v("实例成员：在构造函数内部创建的对象成员，只能由实例化的对象来访问。在构造函数内部通过this添加的成员")]),a._v(" "),s("li",[a._v("构造函数存在内存浪费的问题，创建对象的时候会额外开辟空间以存放方法，且各对象同一方法不存放在一起")])]),a._v(" "),s("h3",{attrs:{id:"_20-2-构造函数原型-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-构造函数原型-prototype"}},[a._v("#")]),a._v(" 20.2 构造函数原型 prototype")]),a._v(" "),s("ol",[s("li",[a._v("构造函数通过原型分配的函数是所有对象所共享的")]),a._v(" "),s("li",[a._v("JavaScript规定，每一个构造函数都一个prototype属性，指向另一个对象。这个对象的所有属性和方法都会被构造函数所拥有")]),a._v(" "),s("li",[a._v("我们可以把不变的方法直接定义在prototype对象上，这样所有的实例就可以共享这些方法")])]),a._v(" "),s("h3",{attrs:{id:"_20-3-对象原型-proto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-对象原型-proto"}},[a._v("#")]),a._v(" 20.3 对象原型__proto__")]),a._v(" "),s("ol",[s("li",[a._v("对象都会有一个属性__proto__指向构造函数的prototype原型对象，这让对象可以使用构造函数原型对象的属性和方法")]),a._v(" "),s("li",[a._v("对象的__proto__对象原型和构造函数的prototype原型对象是一样的")]),a._v(" "),s("li",[a._v("__proto__是一个非标准属性，不能对其赋值")]),a._v(" "),s("li",[a._v("对象方法查找规则\n"),s("ol",[s("li",[a._v("先查找对象是否存在该方法，有就执行对象上的方法")]),a._v(" "),s("li",[a._v("通过__proto__去构造函数原型对象里查找执行")])])])]),a._v(" "),s("h3",{attrs:{id:"_20-4-构造函数constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-4-构造函数constructor"}},[a._v("#")]),a._v(" 20.4 构造函数constructor")]),a._v(" "),s("ol",[s("li",[a._v("对象原型__proto__和构造函数prototype原型对象里面都有一个属性constructor，被称为构造函数，因为它指回构造函数本身")]),a._v(" "),s("li",[a._v("constructor用于记录该对象引用哪个构造函数，它可以让原型对象重新指向原来的构造函数")]),a._v(" "),s("li",[a._v("如果修改了原来的原型对象，给原型对象幅值的是一个对象，则必须手动地使用constructor指回原来的构造函数")])]),a._v(" "),s("h3",{attrs:{id:"_20-5-构造函数、实例、原型对象三者之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-5-构造函数、实例、原型对象三者之间的关系"}},[a._v("#")]),a._v(" 20.5 构造函数、实例、原型对象三者之间的关系")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://pic.imgdb.cn/item/60b5eedd39f6859bc24afce3.jpg",alt:"三角关系"}})]),a._v(" "),s("h3",{attrs:{id:"_20-6-原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-6-原型链"}},[a._v("#")]),a._v(" 20.6 原型链")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://pic.imgdb.cn/item/60b5f00039f6859bc25941ae.jpg",alt:"原型链"}})]),a._v(" "),s("h3",{attrs:{id:"_20-7-成员的查找机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-7-成员的查找机制"}},[a._v("#")]),a._v(" 20.7 成员的查找机制")]),a._v(" "),s("ol",[s("li",[a._v("当访问一个对象的属性（包括方法）时，首先查找这个对象自身有没有该属性")]),a._v(" "),s("li",[a._v("如果没有就查找它的原型（也就是__proto__指向的prototype原型对象）")]),a._v(" "),s("li",[a._v("如果还没有就查找原型对象的原型（Object的原型对象）")]),a._v(" "),s("li",[a._v("依次类推知道找到Object为止（null）")])]),a._v(" "),s("h3",{attrs:{id:"_20-8-原型对象this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-8-原型对象this指向"}},[a._v("#")]),a._v(" 20.8 原型对象this指向")]),a._v(" "),s("ol",[s("li",[a._v("在构造函数中this指向对象实例")]),a._v(" "),s("li",[a._v("原型对象里的this指向对象实例")])]),a._v(" "),s("h3",{attrs:{id:"_20-9-扩展内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-9-扩展内置对象"}},[a._v("#")]),a._v(" 20.9 扩展内置对象")]),a._v(" "),s("ol",[s("li",[a._v("通过原型对象，对原来的内置对象进行扩展自定义的方法")]),a._v(" "),s("li",[a._v("数组和字符串内置对象不能给原型对象覆盖操作"),s("code",[a._v("Array.prototype = {}")]),a._v("，只能是"),s("code",[a._v("Array.prototype.XXX = function(){}")]),a._v("的方式")])]),a._v(" "),s("h2",{attrs:{id:"_21-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-继承"}},[a._v("#")]),a._v(" 21 继承")]),a._v(" "),s("ol",[s("li",[a._v("ES6之前没有给我们提供extends继承。通过构造函数+原型对象模拟实现继承，被称为"),s("strong",[a._v("组合继承")])])]),a._v(" "),s("h3",{attrs:{id:"_21-1-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-1-call"}},[a._v("#")]),a._v(" 21.1 call()")]),a._v(" "),s("ol",[s("li",[a._v("调用这个函数，并且修改函数运行时的this指向")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("fun.call(thisArg, arg1, arg2, ...)")]),a._v(" "),s("ul",[s("li",[a._v("thisArg：当前调用函数this的指向对象")]),a._v(" "),s("li",[a._v("arg1等：传递的其他参数")])])])]),a._v(" "),s("h3",{attrs:{id:"_21-2-借用构造函数继承父类型属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-2-借用构造函数继承父类型属性"}},[a._v("#")]),a._v(" 21.2 借用构造函数继承父类型属性")]),a._v(" "),s("ol",[s("li",[a._v("核心原理：通过call()把父类型的this指向子类型的this，这样就可以实现子类型继承父类型的属性")]),a._v(" "),s("li",[a._v("语法")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//借用父构造函数继承属性")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//此处的this指向父构造函数的对象实例")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("uname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//将父构造函数的this改成子构造函数的this")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"_21-3-借用原型对象继承父类型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-3-借用原型对象继承父类型方法"}},[a._v("#")]),a._v(" 21.3 借用原型对象继承父类型方法")]),a._v(" "),s("ol",[s("li",[a._v("继承方法不能通过赋值原型对象的方法实现，这样会导致本来只打算在子类型上新定义的方法会同步到父类型上")]),a._v(" "),s("li",[a._v("语法")])]),a._v(" "),s("div",{staticClass:"language-JavaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//借用父构造函数继承属性")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("money")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//如果利用对象的形式修改了原型对象，要用constructor指回原来的构造函数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"_21-4-类的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-4-类的本质"}},[a._v("#")]),a._v(" 21.4 类的本质")]),a._v(" "),s("ol",[s("li",[a._v("class的本质还是一个函数，就是构造函数的另一种写法")]),a._v(" "),s("li",[a._v("类有原型对象prototype")]),a._v(" "),s("li",[a._v("类的原型对象prototype里有constructor指向类本身")]),a._v(" "),s("li",[a._v("类可以通过原型对象的方式添加方法")]),a._v(" "),s("li",[a._v("类创造的实例对象有__proto__指向类的原型对象")]),a._v(" "),s("li",[a._v("ES6类其实就是语法糖，简单写法实现相同功能")])]),a._v(" "),s("h2",{attrs:{id:"_22-严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-严格模式"}},[a._v("#")]),a._v(" 22 严格模式")]),a._v(" "),s("ol",[s("li",[a._v("JavaScript除了提供正常模式外，还提供了严格模式(strict mode)。ES5的严格模式是采用具有限制性JavaScript辩题的一种方式")]),a._v(" "),s("li",[a._v("严格模式作用\n"),s("ol",[s("li",[a._v("消除了JavaScript语法的一些不合理、不严谨之处")]),a._v(" "),s("li",[a._v("消除代码不安全之处")]),a._v(" "),s("li",[a._v("提高编译器效率，增加运行速度")]),a._v(" "),s("li",[a._v("禁用了ECMAScript的未来版本中可能会定义的一些语法，为新版本的JavaScript做好铺垫")])])])]),a._v(" "),s("h3",{attrs:{id:"_22-1-开启严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-开启严格模式"}},[a._v("#")]),a._v(" 22.1 开启严格模式")]),a._v(" "),s("ol",[s("li",[a._v("严格模式可以应用到整个脚本或个别函数中")]),a._v(" "),s("li",[a._v("为脚本开启严格模式：在所有语句之前放一个特定语句'use strict'")]),a._v(" "),s("li",[a._v("为函数开启严格模式：在函数里的第一行写一个特定语句'use strict'")])]),a._v(" "),s("h3",{attrs:{id:"_22-2-严格模式变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-严格模式变化"}},[a._v("#")]),a._v(" 22.2 严格模式变化")]),a._v(" "),s("h4",{attrs:{id:"_22-2-1-变量规定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-1-变量规定"}},[a._v("#")]),a._v(" 22.2.1 变量规定")]),a._v(" "),s("ol",[s("li",[a._v("在严格模式下不声明无法赋值变量")]),a._v(" "),s("li",[a._v("严禁删除已经声明的变量")])]),a._v(" "),s("h4",{attrs:{id:"_22-2-2-this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-2-this指向"}},[a._v("#")]),a._v(" 22.2.2 this指向")]),a._v(" "),s("ol",[s("li",[a._v("以前在全局作用域函数中的this指向Windows对象")]),a._v(" "),s("li",[a._v("严格模式下全局作用域中函数的this指向undefined")]),a._v(" "),s("li",[a._v("以前构造函数不加new会当普通函数调用，严格模式下必须使用new")])]),a._v(" "),s("h4",{attrs:{id:"_22-2-3-函数变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-3-函数变化"}},[a._v("#")]),a._v(" 22.2.3 函数变化")]),a._v(" "),s("ol",[s("li",[a._v("函数不能有重名的参数")]),a._v(" "),s("li",[a._v("函数必须声明在顶层。ES6会引入块级作用域")])]),a._v(" "),s("h2",{attrs:{id:"_23-正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-正则表达式"}},[a._v("#")]),a._v(" 23 正则表达式")]),a._v(" "),s("p",[a._v("正则表达式是用于匹配字符串中字符组合的模式\nJavaScript中正则表达式也是对象")]),a._v(" "),s("h3",{attrs:{id:"_23-1-特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-1-特点"}},[a._v("#")]),a._v(" 23.1 特点")]),a._v(" "),s("ol",[s("li",[a._v("灵活性、逻辑性和功能性非常强")]),a._v(" "),s("li",[a._v("可以迅速地用既简单的方式达到字符串的复杂控制")])]),a._v(" "),s("h3",{attrs:{id:"_23-2-创建正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-创建正则表达式"}},[a._v("#")]),a._v(" 23.2 创建正则表达式")]),a._v(" "),s("h4",{attrs:{id:"_23-2-1-利用regexp对象来创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-1-利用regexp对象来创建"}},[a._v("#")]),a._v(" 23.2.1 利用RegExp对象来创建")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("var 变量名 = new RegExp(/表达式/)")])])]),a._v(" "),s("h4",{attrs:{id:"_23-2-2-利用字面量创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-2-利用字面量创建"}},[a._v("#")]),a._v(" 23.2.2 利用字面量创建")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("var 变量名=/表达式/")])])]),a._v(" "),s("h3",{attrs:{id:"_23-3-测试正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-3-测试正则表达式"}},[a._v("#")]),a._v(" 23.3 测试正则表达式")]),a._v(" "),s("ol",[s("li",[a._v("test()正则对象方法，用于检测字符串是否符合该规则")]),a._v(" "),s("li",[a._v("语法"),s("code",[a._v("正则表达式.test(被测试的文本)")])])]),a._v(" "),s("h3",{attrs:{id:"_23-4-正则表达式中的特殊字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-正则表达式中的特殊字符"}},[a._v("#")]),a._v(" 23.4 正则表达式中的特殊字符")]),a._v(" "),s("h4",{attrs:{id:"_23-4-1-正则表达式的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-1-正则表达式的组成"}},[a._v("#")]),a._v(" 23.4.1 正则表达式的组成")]),a._v(" "),s("p",[a._v("一个正则表达式可以由简单的字符构成，也可以是简单和特殊字符的组合\n特殊字符也被称为元字符，在正则表达式中是具有特殊意义的专用符号\n"),s("code",[a._v("/abc/")]),a._v("检测到包含'abc'的内容即可")]),a._v(" "),s("h4",{attrs:{id:"_23-4-2-边界符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-2-边界符"}},[a._v("#")]),a._v(" 23.4.2 边界符")]),a._v(" "),s("ol",[s("li",[a._v("^：表示匹配行首的文本")]),a._v(" "),s("li",[a._v("$：表示匹配行尾的文本")]),a._v(" "),s("li",[s("code",[a._v("/^abc/")]),a._v("检测到包含以'abc'的内容开头即可")]),a._v(" "),s("li",[s("code",[a._v("/^abc$/")]),a._v("检测到内容为'abc'才行")])]),a._v(" "),s("h4",{attrs:{id:"_23-4-3-字符类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-3-字符类"}},[a._v("#")]),a._v(" 23.4.3 字符类")]),a._v(" "),s("ol",[s("li",[a._v("字符类[]表示有一系列字符可供选择，只要匹配其中一个就可以了")]),a._v(" "),s("li",[s("code",[a._v("/[abc]/")]),a._v("检测到包含'a'或'b'或'c'的内容即可")]),a._v(" "),s("li",[s("code",[a._v("/^[abc]$/")]),a._v("三选一，只有是a或者是b或者是c这三个字符才返回true")]),a._v(" "),s("li",[a._v("字符组合"),s("code",[a._v("/^[a-zA-Z0-9_-]$/")]),a._v("可选择的内容扩展")]),a._v(" "),s("li",[a._v("字符组合"),s("code",[a._v("/^[^a-zA-Z0-9_-]$/")]),a._v("如果中括号里面有^表示取反")])]),a._v(" "),s("h4",{attrs:{id:"_23-4-4-量词符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-4-量词符"}},[a._v("#")]),a._v(" 23.4.4 量词符")]),a._v(" "),s("ol",[s("li",[a._v("量词符用来设定某个模式出现的次数")]),a._v(" "),s("li",[a._v("*：重复零次或更多次")]),a._v(" "),s("li",[a._v("+：重复一次或更多次")]),a._v(" "),s("li",[a._v("?：重复零次或一次")]),a._v(" "),s("li",[a._v("{n}：重复n次")]),a._v(" "),s("li",[a._v("{n,}：重复n次或更多次")]),a._v(" "),s("li",[a._v("{n,m}：重复n到m次")])]),a._v(" "),s("h4",{attrs:{id:"_23-4-5-括号总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-5-括号总结"}},[a._v("#")]),a._v(" 23.4.5 括号总结")]),a._v(" "),s("ol",[s("li",[a._v("中括号：字符集合匹配")]),a._v(" "),s("li",[a._v("大括号：量词符")]),a._v(" "),s("li",[a._v("小括号：表示优先级")])]),a._v(" "),s("h4",{attrs:{id:"_23-4-6-预定义类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-6-预定义类"}},[a._v("#")]),a._v(" 23.4.6 预定义类")]),a._v(" "),s("p",[a._v("预定义类值某些常见模式的简写方式")]),a._v(" "),s("ol",[s("li",[a._v("\\d：匹配0-9之间任一数字")]),a._v(" "),s("li",[a._v("\\D：匹配所有0-9意外的字符")]),a._v(" "),s("li",[a._v("\\w：匹配任意的字母、数字和下划线")]),a._v(" "),s("li",[a._v("\\W：除所有字母、数字和下划线以外的字符")]),a._v(" "),s("li",[a._v("\\s：匹配空格（包括换行符、制表符、空格符等）")]),a._v(" "),s("li",[a._v("\\S：匹配非空格的字符")])]),a._v(" "),s("h3",{attrs:{id:"_23-5-正则替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-5-正则替换"}},[a._v("#")]),a._v(" 23.5 正则替换")]),a._v(" "),s("ol",[s("li",[a._v("replace()方法可以实现替换字符串操作，用来替换的参数可以是一个字符串或是一个正则表达式")])]),a._v(" "),s("h4",{attrs:{id:"_23-5-1-正则表达式参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-5-1-正则表达式参数"}},[a._v("#")]),a._v(" 23.5.1 正则表达式参数")]),a._v(" "),s("ol",[s("li",[a._v("语法"),s("code",[a._v("/表达式/[switch]")])]),a._v(" "),s("li",[a._v("switch也称为修饰符，按照什么模式来匹配\n"),s("ul",[s("li",[a._v("g：全局匹配")]),a._v(" "),s("li",[a._v("i：忽略大小写")]),a._v(" "),s("li",[a._v("gi：全局匹配+忽略大小写")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);