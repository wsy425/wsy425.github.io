(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{494:function(t,v,_){"use strict";_.r(v);var a=_(29),i=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("美团前端实习一面，面试时长约38分钟")]),t._v(" "),_("h2",{attrs:{id:"简历相关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简历相关"}},[t._v("#")]),t._v(" 简历相关")]),t._v(" "),_("h3",{attrs:{id:"自我介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[t._v("#")]),t._v(" 自我介绍")]),t._v(" "),_("h3",{attrs:{id:"介绍项目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍项目"}},[t._v("#")]),t._v(" 介绍项目")]),t._v(" "),_("ol",[_("li",[t._v("项目中遇到的问题，怎么解决的")]),t._v(" "),_("li",[t._v("怎么和后端进行持续的数据交互")])]),t._v(" "),_("h2",{attrs:{id:"javascript"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),_("blockquote",[_("p",[t._v("localStorage和sessionStorage的区别\n"),_("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1287779/201804/1287779-20180404065845701-1111813120.png",alt:"区别对比表"}})])]),t._v(" "),_("h4",{attrs:{id:"localstorage"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" localStorage")]),t._v(" "),_("ol",[_("li",[t._v("永久存储机制：将数据保存在客户端本地的硬件设备(通常指硬盘，也可以是其他硬件设备)中，")]),t._v(" "),_("li",[t._v("浏览器被关闭了，该数据仍然存在，下次打开浏览器访问网站时仍然可以继续使用")])]),t._v(" "),_("h4",{attrs:{id:"sessionstorage"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" sessionStorage")]),t._v(" "),_("ol",[_("li",[t._v("跨会话存储机制：将数据保存在session对象中。")]),t._v(" "),_("li",[t._v("session是指用户在浏览某个网站时，从进入网站到浏览器关闭所经过的这段时间，也就是用户浏览这个网站所花费的时间")]),t._v(" "),_("li",[t._v("存储的数据不受页面刷新的影响，但只能在最初存储数据的页面使用，在多页应用程序中的用处有限")])]),t._v(" "),_("blockquote",[_("p",[t._v("捕获和冒泡与事件代理")])]),t._v(" "),_("ol",[_("li",[t._v("事件代理（Event Delegation），又称之为事件委托。是JavaScript中常用绑定事件的常用技巧")]),t._v(" "),_("li",[t._v("事件传播\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019011111581623.jpg",alt:"事件传播流程图"}}),t._v(" "),_("ol",[_("li",[t._v("捕获阶段：从window对象传导到目标节点（上层传到底层）称为“捕获阶段”（capture phase），捕获阶段不会响应任何事件")]),t._v(" "),_("li",[t._v("目标阶段：在目标节点上触发，称为“目标阶段”")]),t._v(" "),_("li",[t._v("冒泡阶段：从目标节点传导回window对象（从底层传回上层），称为“冒泡阶段”（bubbling phase）。事件代理即是利用事件冒泡的机制把里层所需要响应的事件绑定到外层")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("js判断数据类型")])]),t._v(" "),_("ol",[_("li",[t._v("typeof，只能判断简单数据类型，不能具体区分object\n"),_("ol",[_("li",[t._v("对于基本类型，除 null 以外，均可以返回正确的结果。")]),t._v(" "),_("li",[t._v("对于引用类型，除 function 以外，一律返回 object 类型。")]),t._v(" "),_("li",[t._v("对于 null ，返回 object 类型。")]),t._v(" "),_("li",[t._v("对于 function 返回  function 类型")])])]),t._v(" "),_("li",[t._v("instanceof:instanceof 检测的是原型")]),t._v(" "),_("li",[t._v("constructor：当一个函数F被创建时，JS引擎会为其添加prototype原型，然后在原型上添加一个constructor属性，并让其指向F的引用。也就是说F.prototype.constructor === F // ---\x3e true")]),t._v(" "),_("li",[t._v("toString() ：toString 方法默认返回其调用者的具体类型，更严格的讲是toString运行时，this指向的对象类型")])]),t._v(" "),_("blockquote",[_("p",[t._v("箭头函数和普通函数的区别")])]),t._v(" "),_("ol",[_("li",[t._v("箭头函数没有this，所以需要通过查找作用域链来确定this的值，这就意味着如果箭头函数被非箭头函数包含，this绑定的就是最近一层非箭头函数的this")]),t._v(" "),_("li",[t._v("箭头函数没有自己的arguments对象，可以在箭头函数中使用rest参数代替arguments对象，来访问箭头函数的参数列表")]),t._v(" "),_("li",[t._v("不能通过new关键字调用，同样也没有new.target值和原型")]),t._v(" "),_("li",[t._v("箭头函数继承而来的this指向永远不变,.call()/.apply()/.bind()无法改变箭头函数中this的指向")]),t._v(" "),_("li",[t._v("箭头函数不能作为构造函数使用")]),t._v(" "),_("li",[t._v("箭头函数没有原型prototype")]),t._v(" "),_("li",[t._v("箭头函数不能用作Generator函数，不能使用yeild关键字")]),t._v(" "),_("li",[t._v("箭头函数不具有super，不具有new.target")])]),t._v(" "),_("blockquote",[_("p",[t._v("var let const 变量提升的理解")])]),t._v(" "),_("h4",{attrs:{id:"var"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),_("ol",[_("li",[t._v("var存在变量提升")]),t._v(" "),_("li",[t._v("函数作用域")]),t._v(" "),_("li",[t._v("可以重复声明")]),t._v(" "),_("li",[t._v("全局声明时会变成windows对象的属性")])]),t._v(" "),_("h4",{attrs:{id:"let"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),_("ol",[_("li",[t._v("块级作用域")]),t._v(" "),_("li",[t._v("全局声明时不会变成windows对象的属性")]),t._v(" "),_("li",[t._v("不能进行条件式声明（判断是否声明然后再确定是否声明），因为会声明在条件符合的块级作用域里")]),t._v(" "),_("li",[t._v("let没有变量提升")]),t._v(" "),_("li",[t._v("不允许重复声明")]),t._v(" "),_("li",[t._v("暂时性死区：js引擎会注意到后面的let声明，但并没有变量提升，会抛出ReferenceError，而不是not defined")])]),t._v(" "),_("h4",{attrs:{id:"const"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),_("ol",[_("li",[t._v("块级作用域")]),t._v(" "),_("li",[t._v("全局声明时不会变成windows对象的属性")]),t._v(" "),_("li",[t._v("没有变量提升")]),t._v(" "),_("li",[t._v("不允许重复声明")]),t._v(" "),_("li",[t._v("声明变量时必须赋值")]),t._v(" "),_("li",[t._v("变量不能修改，但仅限于变量引用的对象，对内部属性的修改不报错")])]),t._v(" "),_("h4",{attrs:{id:"变量提升的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量提升的理解"}},[t._v("#")]),t._v(" 变量提升的理解")]),t._v(" "),_("p",[t._v("var变量的时候会把所有变量声明都拉到函数作用域的顶部")]),t._v(" "),_("h2",{attrs:{id:"浏览器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),_("blockquote",[_("p",[t._v("如何解决跨域")])]),t._v(" "),_("ol",[_("li",[t._v("目前最常用的 CORS：服务器端可以在 HTTP 响应头上通过 Access-Control-Allow-(Origin/Headers/Methods/Credentials/) 等响应头字段设置允许访问该资源的请求源，请求头，请求方法，是否允许携带 cookies 等")]),t._v(" "),_("li",[t._v("webpack 提供的 proxy：仅适用于开发阶段")]),t._v(" "),_("li",[t._v("Nginx 添加请求头：允许的源很难动态更改")]),t._v(" "),_("li",[t._v("JSONP\n"),_("ol",[_("li",[t._v("只允许 GET 请求，因此 URL 长度受限，不安全")]),t._v(" "),_("li",[t._v("需要服务器端进行配合")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("JSONP的处理流程")])]),t._v(" "),_("ol",[_("li",[t._v("浏览器端声明需要执行的 callback 函数，比如叫 run")]),t._v(" "),_("li",[t._v("浏览器端动态生成 script 标签，将 src 属性指向目标 url 同时携带上参数 callback=run")]),t._v(" "),_("li",[t._v("服务器端接收到请求后将结果包装成 json 格式，同时返回字符串 run(json 格式的结果)")]),t._v(" "),_("li",[t._v("浏览器端接收到数据后就会执行相应的 run 函数")])]),t._v(" "),_("blockquote",[_("p",[t._v("cors的处理流程")])]),t._v(" "),_("ol",[_("li",[t._v("提到简单请求和非简单请求，只有非简单请求才会触发预过程\n"),_("ol",[_("li",[t._v("简单请求必须同时满足下面三个条件\n"),_("ol",[_("li",[t._v("请求方式只能是：GET、POST、HEAD")]),t._v(" "),_("li",[t._v("HTTP请求头限制这几种字段：Accept、Accept-Language、Content-Language、Content-Type、Last-Event-ID")]),t._v(" "),_("li",[t._v("Content-type只能取：application/x-www-form-urlencoded、multipart/form-data、text/plain")])])])])]),t._v(" "),_("li",[t._v("浏览器首先发出一个 OPTIONS 请求，包含非简单请求中存在的请求信息，如请求方法，请求头，源等等")]),t._v(" "),_("li",[t._v("服务器端返回它所允许的上述内容，并且如果预检请求能够通过就返回 200 响应")]),t._v(" "),_("li",[t._v("浏览器接收到响应后，再判断是否真正发出非简单请求")])]),t._v(" "),_("h2",{attrs:{id:"html-css"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html-css"}},[t._v("#")]),t._v(" HTML/CSS")]),t._v(" "),_("blockquote",[_("p",[t._v("盒子模型")])]),t._v(" "),_("ol",[_("li",[t._v("盒模型包括margin、border、padding、content四个部分，主要的设置属性是margin、border、padding\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200222112437742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0OTUxMDU3,size_16,color_FFFFFF,t_70",alt:"盒子模型图"}})]),t._v(" "),_("li",[t._v("正常设置盒子模型的width时不包括padding和margin，当box-sizing设置为border-box时则包括padding和border")])]),t._v(" "),_("blockquote",[_("p",[t._v("CSS选择符，权重\n"),_("img",{attrs:{src:"https://i.loli.net/2020/12/08/2D6LouejckKPaGz.jpg",alt:"选择器权重一览.jpg"}}),t._v(" "),_("img",{attrs:{src:"https://i.loli.net/2020/11/30/ADSCtpy9XRWmGuv.jpg",alt:"复合选择器总结.jpg"}}),t._v("\ndiv中的img如何上下左右居中")])]),t._v(" "),_("h4",{attrs:{id:"flex布局"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[t._v("#")]),t._v(" flex布局")]),t._v(" "),_("ol",[_("li",[t._v("利用flex的"),_("code",[t._v("alignItems:center")]),t._v("垂直居中")]),t._v(" "),_("li",[_("code",[t._v("justifycontent:center")]),t._v("水平居中")])]),t._v(" "),_("h4",{attrs:{id:"margin-auto"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto"}},[t._v("#")]),t._v(" margin:auto")]),t._v(" "),_("p",[t._v("相对定位下，使用绝对定位将上下左右都设置为0，再设置"),_("code",[t._v("margin:auto")]),t._v("即可实现居中")]),t._v(" "),_("h4",{attrs:{id:"利用相对定位和绝对定位-再加上外边距和平移的配合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#利用相对定位和绝对定位-再加上外边距和平移的配合"}},[t._v("#")]),t._v(" 利用相对定位和绝对定位，再加上外边距和平移的配合")]),t._v(" "),_("p",[t._v("相对定位下，使用绝对定位，利用margin偏移外容器的50%，再利用translate平移回补自身宽高的50%即可")]),t._v(" "),_("h4",{attrs:{id:"利用textalign和verticalalign"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#利用textalign和verticalalign"}},[t._v("#")]),t._v(" 利用textAlign和verticalAlign")]),t._v(" "),_("ol",[_("li",[t._v("利用"),_("code",[t._v("textAlign:center")]),t._v("实现行内元素的水平居中")]),t._v(" "),_("li",[t._v("再利用"),_("code",[t._v("verticalAlign:middle")]),t._v("实现行内元素的垂直居中")]),t._v(" "),_("li",[t._v("前提是要先加上伪元素并给设置高度为100%")])]),t._v(" "),_("h2",{attrs:{id:"webpack"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),_("ol",{attrs:{start:"12"}},[_("li",[t._v("webpack的理解，如何打包的")]),t._v(" "),_("li",[t._v("webpack怎么实现ES6到ES5")]),t._v(" "),_("li",[t._v("webpack怎么配置参数")])]),t._v(" "),_("h2",{attrs:{id:"vue"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" VUE")]),t._v(" "),_("blockquote",[_("p",[t._v("VUE2.x和VUE3的区别 VUE2.X和VUE3的数据响应式原理区别")])]),t._v(" "),_("ol",[_("li",[t._v("响应式原理的重写\n"),_("ol",[_("li",[t._v("vue2 响应式是基于"),_("code",[t._v("Object.defineProperty")]),t._v("实现的，存在较大的问题\n"),_("ol",[_("li",[t._v("对数组等集合类型的支持不佳")]),t._v(" "),_("li",[t._v("对嵌套属性的深层响应支持不佳")]),t._v(" "),_("li",[t._v("对新增属性的支持不佳）")])])]),t._v(" "),_("li",[t._v("vue3 响应式是基于新的 API"),_("code",[t._v("proxy")]),t._v("实现的，功能更加强大")])])]),t._v(" "),_("li",[t._v("组合式 API 的引入，使 vue 可以写出更加解耦的代码")]),t._v(" "),_("li",[t._v("vue3 各模块之间更加解耦，响应式相关封装成了 reactivity 包，组合式 API 相关封装成了"),_("code",[t._v("composition-api")]),t._v("包，因此可以按需引入了")]),t._v(" "),_("li",[t._v("对 typescript 的支持更好")])]),t._v(" "),_("blockquote",[_("p",[t._v("VUE2.x怎么实现复杂数据结构的数据监听\nVUE开发组件方面 Angular和VUE的区别，使用起来的 谈谈pinia")])])])}),[],!1,null,null,null);v.default=i.exports}}]);